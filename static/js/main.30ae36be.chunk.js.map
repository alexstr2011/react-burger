{"version":3,"sources":["components/burger-constructor-element/burger-constructor-element.module.css","pages/home.module.css","components/order-element/order-element.module.css","components/app-header/app-header.module.css","services/types/types.ts","components/app-header/app-header.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/ingredient-details/ingredient-details.tsx","utils/cookies.ts","utils/data.ts","components/protected-route/protected-route.tsx","components/protected-route-authorized/protected-route-authorized.tsx","components/burger-list-ingredient/burger-list-ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","services/api/urls.ts","services/actions/actions.ts","components/burger-constructor-element/burger-constructor-element.tsx","images/checkMark.png","components/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","services/actions/user-actions.ts","pages/login.tsx","components/profile-menu/profile-menu.tsx","pages/profile.tsx","pages/register.tsx","services/actions/password-actions.ts","pages/forgot-password.tsx","pages/reset-password.tsx","pages/page-404.tsx","components/orders-overview/orders-overview.tsx","utils/formatDate.ts","components/order-element/order-element.tsx","services/actions/orders-actions.ts","pages/feed.tsx","pages/history.tsx","components/order-info/order-info.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/user-reducer.ts","services/reducers/password-reducer.ts","services/reducers/orders-reducer.ts","services/reducers/reducers.ts","services/store/store.ts","services/middleware/socket-middleware.ts","index.tsx","components/order-info/order-info.module.css","components/profile-menu/profile-menu.module.css","components/orders-overview/orders-overview.module.css","components/ingredient-details/ingredient-details.module.css","pages/login.module.css","pages/register.module.css","components/burger-constructor/burger-constructor.module.css","pages/profile.module.css","pages/reset-password.module.css","pages/forgot-password.module.css","components/burger-list-ingredient/burger-list-ingredient.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/feed.module.css","components/modal/modal.module.css","pages/history.module.css","components/order-details/order-details.module.css","components/app/app.module.css","components/modal-overlay/modal-overlay.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","className","styles","header","wrapper","flexContainer","exact","to","link","activeClassName","linkActive","type","profile","ModalOverlay","closeModal","onClick","overlay","modalRoot","document","getElementById","Modal","children","title","React","useEffect","closeModalEsc","e","code","addEventListener","removeEventListener","ReactDOM","createPortal","modal","closeButton","IngredientDetails","addTitle","ingredients","store","burgerIngredientsReducer","data","id","useParams","find","_id","ingredientDetails","src","image_large","image","alt","name","row","column","calories","proteins","fat","carbohydrates","setCookie","value","props","exp","path","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","ORDER_STATUSES","ProtectedRoute","rest","user","userReducer","isToken","render","location","pathname","state","from","ProtectedRouteAuthorized","isLogin","BurgerListIngredient","ingredientAmount","useDrag","item","collect","monitor","isDrag","isDragging","dragRef","opacity","ref","ingredient","style","price","count","size","BurgerIngredients","ingredientTypes","ingredientTypesReducer","burgerConstructor","burgerConstructorReducer","useLocation","ingredientsAmount","useMemo","result","bun","inners","forEach","menuRef","useRef","headersRef","current","map","_","index","createRef","useState","currentType","setCurrentType","clickHandler","findIndex","ingredientType","element","scrollIntoView","behavior","ingredientsList","elementType","ingredientsOfType","filter","elementIngredient","background","menu","active","onScroll","menuTop","getBoundingClientRect","top","selectedType","distance","Math","abs","sort","a","b","GET_USER_URL","BURGER_INGREDIENTS","BURGER_CONSTRUCTOR","ORDER_NUMBER","refreshToken","afterRefresh","dispatch","fetch","method","headers","body","JSON","stringify","token","localStorage","getItem","then","response","ok","json","Error","success","accessToken","split","setItem","catch","error","console","log","message","orderNumberLoad","authorization","number","order","BurgerConstructorElement","useDrop","accept","drop","dragIndex","dropIndex","dropBoundingRect","dropMiddleY","bottom","clientOffset","getClientOffset","y","indexFrom","indexTo","isHover","isOver","dropRef","isLocked","text","thumbnail","handleClose","OrderDetails","orderNumber","checkMark","BurgerConstructor","topBun","bottomBun","history","useHistory","orderNumberReducer","localId","floor","random","orderValue","innerList","key","reduce","acc","constructor","list","length","info","isLoading","orderInfo","push","HomePage","DndProvider","backend","HTML5Backend","main","USER_ACTIONS","logout","removeItem","getUser","updateUser","email","password","LoginPage","setEmail","setPassword","loginHandler","useCallback","preventDefault","login","changeEmailHandler","target","changePasswordHandler","onSubmit","form","inputWrapper","onChange","textRow","ProfileMenu","menuList","menuItemLink","menuActiveItemLink","menuItem","ProfilePage","setName","positioning","placeholder","icon","buttonsRow","RegisterPage","registerHandler","register","changeNameHandler","PASSWORD_ACTIONS","ForgotPasswordPage","isForgotPassword","passwordReducer","isForgot","restoreHandler","forgotPassword","ResetPasswordPage","isReset","setToken","resetPassword","changeTokenHandler","Page404","OrdersOverview","ordersDone","orders","status","ordersPending","table","tableHeader","firstColumn","tableRow","readyOrder","total","totalToday","getStatusDescription","Object","values","formatOrderDate","orderDatePresentation","orderDate","dateFormatted","Intl","DateTimeFormat","timeZoneName","hour","minute","format","orderDateMs","setHours","currentDateMs","difference","OrderElement","isHistory","allIngredients","ingredient_id","sum","accum","showIngredients","hiddenIngredients","feed","rowFar","createdAt","picturesList","isShowHidden","pictureContainer","picture","WS_ALL_ORDERS_ACTION","WS_USER_ORDERS_ACTION","FeedPage","allOrdersReducer","wsConnected","allWrapper","HistoryPage","userOrdersReducer","OrderInfo","isFeed","includes","toTheRight","App","isError","action","goBack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userInitialState","passwordInitialState","isForgotLoading","isForgotError","isResetLoading","isResetError","initialState","ingredientTypesInitialState","burgerIngredientsInitialState","burgerConstructorInitialState","orderNumberInitialState","rootReducer","combineReducers","newIngredient","slice","newInners","payload","wsUrl","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","onopen","event","onerror","onmessage","parse","onclose","parsedData","socketMiddlewareUserOrders","createStore","initStore","StrictMode","basename"],"mappings":"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","file":"static/js/main.30ae36be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"burger-constructor-element_ingredient__1FPfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__1Iott\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-element_wrapper__1_rwA\",\"history\":\"order-element_history__1D2q6\",\"feed\":\"order-element_feed__2D-mF\",\"row\":\"order-element_row__2nq70\",\"rowFar\":\"order-element_rowFar__2-Phf\",\"picturesList\":\"order-element_picturesList__2tvFC\",\"pictureContainer\":\"order-element_pictureContainer__38wNJ\",\"picture\":\"order-element_picture__X72Gz\",\"hiddenIngredients\":\"order-element_hiddenIngredients__16Qlu\",\"readyOrder\":\"order-element_readyOrder__22fx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__3ppBU\",\"wrapper\":\"app-header_wrapper__2WFsj\",\"flexContainer\":\"app-header_flexContainer__2O8rU\",\"profile\":\"app-header_profile__28pUV app-header_flexContainer__2O8rU\",\"link\":\"app-header_link__3uXmW\",\"linkActive\":\"app-header_linkActive__11fqb\"};","import { ThunkAction } from 'redux-thunk';\r\nimport { ActionCreator } from 'redux';\r\nimport {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\nimport {rootReducer} from \"../reducers/reducers\";\r\nimport {store} from \"../store/store\";\r\nimport {T_WS_AllOrdersActions, T_WS_UserOrdersActions} from \"../actions/orders-actions\";\r\nimport {TBurgerConstructorActions, TBurgerIngredientsActions, TOrderNumberActions} from \"../actions/actions\";\r\nimport {TPasswordActions} from \"../actions/password-actions\";\r\nimport {TUserActions} from \"../actions/user-actions\";\r\nimport {Location} from \"history\";\r\n\r\nexport type TOrder = {\r\n    _id: string;\r\n    ingredients: ReadonlyArray<string>;\r\n    status: string;\r\n    name: string;\r\n    createdAt: string;\r\n    number: number;\r\n};\r\n\r\nexport type TOrders = {\r\n    orders: Array<TOrder>;\r\n    total: number;\r\n    totalToday: number;\r\n}\r\n\r\nexport type TIngredient = {\r\n    _id: string;\r\n    name: string;\r\n    type: string;\r\n    proteins: number;\r\n    fat: number;\r\n    carbohydrates: number;\r\n    calories: number;\r\n    price: number;\r\n    image: string;\r\n    image_mobile: string;\r\n    image_large: string;\r\n};\r\n\r\nexport type TConstructorIngredient = TIngredient & { key: string };\r\n\r\nexport type TUserInfo = {\r\n    name: null | string;\r\n    email: null | string;\r\n};\r\n\r\nexport interface ICustomLocation extends Location {\r\n    background?: any;\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type TApplicationActions = TBurgerIngredientsActions\r\n    | TBurgerConstructorActions\r\n    | TOrderNumberActions\r\n    | T_WS_AllOrdersActions\r\n    | T_WS_UserOrdersActions\r\n    | TPasswordActions\r\n    | TUserActions;\r\n\r\nexport type AppThunk<TReturn = void> = ActionCreator<ThunkAction<TReturn, RootState, unknown, TApplicationActions>>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import React, {FC} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { Logo,BurgerIcon,ListIcon,ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './app-header.module.css';\r\n\r\nconst AppHeader: FC = () => {\r\n    return (\r\n        <header className={styles.header + ' m-10'}>\r\n            <div className={styles.wrapper + ' m-5'}>\r\n                <nav className={styles.flexContainer}>\r\n                    <NavLink exact to='/'\r\n                             className={styles.link}\r\n                             activeClassName={styles.linkActive}>\r\n                        <BurgerIcon type=\"secondary\"/>\r\n                        <p className=\"text text_type_main-default ml-2 mr-2\">\r\n                            Конструктор\r\n                        </p>\r\n                    </NavLink>\r\n                    <NavLink to='/feed'\r\n                             className={styles.link}\r\n                             activeClassName={styles.linkActive}>\r\n                        <ListIcon type=\"secondary\"/>\r\n                        <p className=\"text text_type_main-default ml-2\">\r\n                            Лента заказов\r\n                        </p>\r\n                    </NavLink>\r\n                </nav>\r\n                <NavLink exact to='/'\r\n                         className={styles.link}>\r\n                    <Logo />\r\n                </NavLink>\r\n                <nav>\r\n                    <NavLink to='/profile'\r\n                             className={`${styles.link}  ${styles.profile}`}\r\n                             activeClassName={styles.linkActive}>\r\n                        <ProfileIcon type=\"secondary\"/>\r\n                        <p className=\"text text_type_main-default ml-2\">\r\n                            Личный кабинет\r\n                        </p>\r\n                    </NavLink>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import React, {FC} from 'react';\r\nimport styles from './modal-overlay.module.css';\r\n\r\ninterface IModalOverlayProps {\r\n  closeModal: () => void;\r\n};\r\n\r\nconst ModalOverlay: FC<IModalOverlayProps> = ({closeModal}) => {\r\n    return (\r\n        <div onClick={closeModal} className={styles.overlay} />\r\n    );\r\n}\r\n\r\nexport default ModalOverlay;","import React, {FC} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from './modal.module.css';\r\nimport {CloseIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\n\r\ninterface IModalProps {\r\n    closeModal: () => void;\r\n    title?: string;\r\n}\r\n\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\n\r\nconst Modal: FC<IModalProps> = ({closeModal, children, title}) => {\r\n\r\n    React.useEffect(() => {\r\n        const closeModalEsc = (e: KeyboardEvent) => {\r\n            if (e.code === 'Escape') {\r\n                closeModal();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', closeModalEsc);\r\n        return ()=>{\r\n            document.removeEventListener('keydown', closeModalEsc);\r\n        };\r\n    }, [closeModal]);\r\n\r\n    return modalRoot &&\r\n        ReactDOM.createPortal(\r\n            (\r\n                <>\r\n                    <section className={styles.modal}>\r\n                        <header className={styles.header}>\r\n                            <p className=\"text text_type_main-large mt-10 ml-10\">\r\n                                {title}\r\n                            </p>\r\n                            <div onClick={closeModal} className={styles.closeButton + ' mt-15 mr-10'}>\r\n                                <CloseIcon type=\"primary\"/>\r\n                            </div>\r\n                        </header>\r\n                        {children}\r\n                    </section>\r\n                    <ModalOverlay closeModal={closeModal}/>\r\n                </>\r\n            ),\r\n            modalRoot\r\n        );\r\n};\r\n\r\nexport default Modal;","import React, {FC} from 'react';\r\nimport {useSelector} from \"../../services/types/types\";\r\nimport { useParams } from 'react-router-dom';\r\nimport styles from './ingredient-details.module.css';\r\n\r\ninterface IIngredientDetailsProps {\r\n    addTitle?: boolean;\r\n}\r\n\r\nconst IngredientDetails: FC<IIngredientDetailsProps> = ({addTitle = false}) => {\r\n    const ingredients = useSelector(store => store.burgerIngredientsReducer.data);\r\n    const { id } = useParams<{id: string}>();\r\n    const data = ingredients.find(({_id}) => _id === id);\r\n\r\n    return data ?\r\n        (\r\n            <section className={styles.ingredientDetails + ' mb-15'}>\r\n                {addTitle && (\r\n                    <h2 className={styles.header}>\r\n                        <p className=\"text text_type_main-large\">\r\n                            Детали ингредиента\r\n                        </p>\r\n                    </h2>\r\n                )}\r\n                <img src={data.image_large} className={styles.image} alt={data.name}/>\r\n                <p className=\"text text_type_main-medium mt-4 mb-8\">\r\n                    {data.name}\r\n                </p>\r\n                <div className={styles.row}>\r\n                    <div className={styles.column}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            Калории, ккал\r\n                        </p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            {data.calories}\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.column}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            Белки, г\r\n                        </p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            {data.proteins}\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.column}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            Жиры, г\r\n                        </p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            {data.fat}\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.column}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            Углеводы, г\r\n                        </p>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">\r\n                            {data.carbohydrates}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        ) : (\r\n            <p>Loading...</p>\r\n        );\r\n};\r\n\r\nexport default IngredientDetails;","interface iCookieProps {\r\n    [key: string]: any;\r\n}\r\n\r\nexport function setCookie(name: string, value: string, props?: iCookieProps): void {\r\n    props = props || {};\r\n    props = {\r\n        path: '/',\r\n        ...props\r\n    };\r\n\r\n    let exp = props.expires;\r\n    if (typeof exp === 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name: string): string | undefined {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function deleteCookie(name: string): void {\r\n    setCookie(name, \"\", {\r\n        'max-age': -1\r\n    });\r\n}\r\n","export enum ORDER_STATUSES {\r\n    done = 'Выполнен',\r\n    created = 'Создан',\r\n    pending = 'Готовится'\r\n}\r\n\r\nexport const getStatusDescription = (key: string): string | undefined => {\r\n    return Object.values(ORDER_STATUSES).find(status => status === key);\r\n};\r\n\r\n/*\r\nconst data = [\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b1\",\r\n        \"name\": \"Краторная булка N-200i\",\r\n        \"type\": \"bun\",\r\n        \"proteins\": 80,\r\n        \"fat\": 24,\r\n        \"carbohydrates\": 53,\r\n        \"calories\": 420,\r\n        \"price\": 1255,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/bun-02.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/bun-02-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/bun-02-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b5\",\r\n        \"name\": \"Говяжий метеорит (отбивная)\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 800,\r\n        \"fat\": 800,\r\n        \"carbohydrates\": 300,\r\n        \"calories\": 2674,\r\n        \"price\": 3000,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-04.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-04-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-04-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b6\",\r\n        \"name\": \"Биокотлета из марсианской Магнолии\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 420,\r\n        \"fat\": 142,\r\n        \"carbohydrates\": 242,\r\n        \"calories\": 4242,\r\n        \"price\": 424,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-01.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-01-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-01-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b7\",\r\n        \"name\": \"Соус Spicy-X\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 30,\r\n        \"fat\": 20,\r\n        \"carbohydrates\": 40,\r\n        \"calories\": 30,\r\n        \"price\": 90,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-02.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-02-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-02-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b4\",\r\n        \"name\": \"Мясо бессмертных моллюсков Protostomia\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 433,\r\n        \"fat\": 244,\r\n        \"carbohydrates\": 33,\r\n        \"calories\": 420,\r\n        \"price\": 1337,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-02.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-02-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-02-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b9\",\r\n        \"name\": \"Соус традиционный галактический\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 42,\r\n        \"fat\": 24,\r\n        \"carbohydrates\": 42,\r\n        \"calories\": 99,\r\n        \"price\": 15,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-03.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-03-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-03-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b8\",\r\n        \"name\": \"Соус фирменный Space Sauce\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 50,\r\n        \"fat\": 22,\r\n        \"carbohydrates\": 11,\r\n        \"calories\": 14,\r\n        \"price\": 80,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-04.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-04-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-04-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bc\",\r\n        \"name\": \"Плоды Фалленианского дерева\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 20,\r\n        \"fat\": 5,\r\n        \"carbohydrates\": 55,\r\n        \"calories\": 77,\r\n        \"price\": 874,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sp_1.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sp_1-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sp_1-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bb\",\r\n        \"name\": \"Хрустящие минеральные кольца\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 808,\r\n        \"fat\": 689,\r\n        \"carbohydrates\": 609,\r\n        \"calories\": 986,\r\n        \"price\": 300,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/mineral_rings.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/mineral_rings-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/mineral_rings-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9ba\",\r\n        \"name\": \"Соус с шипами Антарианского плоскоходца\",\r\n        \"type\": \"sauce\",\r\n        \"proteins\": 101,\r\n        \"fat\": 99,\r\n        \"carbohydrates\": 100,\r\n        \"calories\": 100,\r\n        \"price\": 88,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/sauce-01.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/sauce-01-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/sauce-01-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bd\",\r\n        \"name\": \"Кристаллы марсианских альфа-сахаридов\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 234,\r\n        \"fat\": 432,\r\n        \"carbohydrates\": 111,\r\n        \"calories\": 189,\r\n        \"price\": 762,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/core.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/core-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/core-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9be\",\r\n        \"name\": \"Мини-салат Экзо-Плантаго\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 1,\r\n        \"fat\": 2,\r\n        \"carbohydrates\": 3,\r\n        \"calories\": 6,\r\n        \"price\": 4400,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/salad.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/salad-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/salad-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b3\",\r\n        \"name\": \"Филе Люминесцентного тетраодонтимформа\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 44,\r\n        \"fat\": 26,\r\n        \"carbohydrates\": 85,\r\n        \"calories\": 643,\r\n        \"price\": 988,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/meat-03.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/meat-03-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/meat-03-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9bf\",\r\n        \"name\": \"Сыр с астероидной плесенью\",\r\n        \"type\": \"main\",\r\n        \"proteins\": 84,\r\n        \"fat\": 48,\r\n        \"carbohydrates\": 420,\r\n        \"calories\": 3377,\r\n        \"price\": 4142,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/cheese.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/cheese-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/cheese-large.png\",\r\n        \"__v\": 0\r\n    },\r\n    {\r\n        \"_id\": \"60666c42cc7b410027a1a9b2\",\r\n        \"name\": \"Флюоресцентная булка R2-D3\",\r\n        \"type\": \"bun\",\r\n        \"proteins\": 44,\r\n        \"fat\": 26,\r\n        \"carbohydrates\": 85,\r\n        \"calories\": 643,\r\n        \"price\": 988,\r\n        \"image\": \"https://code.s3.yandex.net/react/code/bun-01.png\",\r\n        \"image_mobile\": \"https://code.s3.yandex.net/react/code/bun-01-mobile.png\",\r\n        \"image_large\": \"https://code.s3.yandex.net/react/code/bun-01-large.png\",\r\n        \"__v\": 0\r\n    }\r\n];\r\n */\r\n","import {FC} from \"react\";\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport {useSelector} from '../../services/types/types';\r\nimport {getCookie} from \"../../utils/cookies\";\r\n\r\nexport const ProtectedRoute: FC<RouteProps> = ({children, ...rest}) => {\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const isToken = getCookie('accessToken');\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) =>\r\n                (user && user.name) || isToken ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: {from: location}\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};","import {FC} from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport {useSelector} from '../../services/types/types';\r\nimport {getCookie} from \"../../utils/cookies\";\r\n\r\ninterface IProtectedRouteAuthorizedProps extends RouteProps {\r\n    isLogin?: boolean;\r\n}\r\n\r\ninterface ICustomState {\r\n    from?: string;\r\n}\r\n\r\nexport const ProtectedRouteAuthorized: FC<IProtectedRouteAuthorizedProps> =\r\n    ({children, isLogin, ...rest}) => {\r\n\r\n    const user = useSelector(store => store.userReducer.user);\r\n    const isToken = getCookie('accessToken');\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                ({location}) => {\r\n                    const state = location.state as ICustomState;\r\n                    const to = (isLogin && state && state.from) ? state.from : '/';\r\n\r\n                    return (user && user.name) || isToken ? (\r\n                        <Redirect to={to} />\r\n                    ) : (\r\n                        children\r\n                    )\r\n                }\r\n            }\r\n        />\r\n    );\r\n};","import React, {FC} from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport {CurrencyIcon, Counter} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './burger-list-ingredient.module.css';\r\nimport {TIngredient} from \"../../services/types/types\";\r\n\r\ninterface IBurgerListIngredientProps {\r\n    data: TIngredient;\r\n    ingredientAmount: number;\r\n}\r\n\r\nconst BurgerListIngredient: FC<IBurgerListIngredientProps> = ({data, ingredientAmount}) => {\r\n    const [{isDrag}, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: data,\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    const opacity = isDrag ? 0.1 : 1;\r\n\r\n    return (\r\n        <div ref={dragRef} className={styles.ingredient + ' ml-4 mb-10 mt-6'} style={{opacity}}>\r\n            <img\r\n                className={styles.image}\r\n                src={data.image}\r\n                alt={data.name}\r\n                title={data.name} />\r\n            <div className={styles.price + ' m-2'}>\r\n                <p className=\"text text_type_digits-default mr-2\">{data.price}</p>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <p className={styles.name + \" text text_type_main-default\"}>{data.name}</p>\r\n            <Counter count={ingredientAmount ? ingredientAmount : 0} size=\"default\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BurgerListIngredient;","import React, {FC} from 'react';\r\nimport { useSelector } from '../../services/types/types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {Tab} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport BurgerListIngredient from '../burger-list-ingredient/burger-list-ingredient';\r\nimport styles from './burger-ingredients.module.css';\r\n\r\nconst BurgerIngredients: FC = () => {\r\n    const {data, ingredientTypes, burgerConstructor} = useSelector(store => ({\r\n        data: store.burgerIngredientsReducer.data,\r\n        ingredientTypes: store.ingredientTypesReducer,\r\n        burgerConstructor: store.burgerConstructorReducer\r\n    }));\r\n\r\n    const location = useLocation();\r\n\r\n    const ingredientsAmount = React.useMemo(() => {\r\n        const result: { [key: string]: number } = {};\r\n        if (burgerConstructor.bun) {\r\n            result[burgerConstructor.bun._id] = 2;\r\n        }\r\n        burgerConstructor.inners.forEach(ingredient => {\r\n            if (result[ingredient._id]) {\r\n                result[ingredient._id]++;\r\n            } else {\r\n                result[ingredient._id] = 1;\r\n            }\r\n        });\r\n        return result;\r\n    }, [burgerConstructor]);\r\n\r\n    const menuRef = React.useRef<HTMLElement>(null);\r\n    const headersRef = React.useRef<Array<{ current: HTMLParagraphElement }>>([]);\r\n    headersRef.current = ingredientTypes.map((_, index) =>\r\n        headersRef.current[index] ?? React.createRef<HTMLParagraphElement>());\r\n\r\n    const [currentType, setCurrentType] = React.useState(ingredientTypes[0].type);\r\n\r\n    const clickHandler = (type: string) => {\r\n        setCurrentType(type);\r\n        const index = ingredientTypes.findIndex(ingredientType => ingredientType.type === type);\r\n        if (index !== -1) {\r\n            const element = headersRef.current[index].current;\r\n            if (element) {\r\n                element.scrollIntoView({\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const scrollHandler = () => {\r\n        const menuTop = menuRef.current ? menuRef.current.getBoundingClientRect().top : 0;\r\n\r\n        const selectedType = ingredientTypes.map((ingredientType, index) => ({\r\n            type: ingredientType.type,\r\n            distance: Math.abs(menuTop - headersRef.current[index].current.getBoundingClientRect().top)\r\n        })).sort((a, b) => a.distance - b.distance)[0].type;\r\n\r\n        if (currentType !== selectedType) {\r\n            setCurrentType(selectedType);\r\n        }\r\n    };\r\n\r\n    const ingredientsList = ingredientTypes.map((elementType, index) =>\r\n        <li key={elementType.type}>\r\n            <p  ref={headersRef.current[index]} className=\"text text_type_main-medium\">\r\n                {elementType.name}\r\n            </p>\r\n            <ul className={styles.ingredientsOfType} data-name={elementType.name}>\r\n                {\r\n                    data.filter(elementIngredient => elementIngredient.type === elementType.type)\r\n                        .map(elementIngredient =>\r\n                            <li key={elementIngredient._id}>\r\n                                <Link className={styles.link}\r\n                                    to={{\r\n                                        pathname: `/ingredients/${elementIngredient._id}`,\r\n                                        state: { background: location }\r\n                                    }}>\r\n                                    <BurgerListIngredient\r\n                                        data={elementIngredient}\r\n                                        ingredientAmount={ingredientsAmount[elementIngredient._id]}\r\n                                    />\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                }\r\n            </ul>\r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <p className=\"text text_type_main-large\">\r\n                Соберите бургер\r\n            </p>\r\n            <nav ref={menuRef} className={styles.menu + ' mt-5 mb-10'}>\r\n                {\r\n                    ingredientTypes.map(element =>\r\n                        <Tab value={element.type} active={currentType === element.type} key={element.type}\r\n                             onClick={clickHandler}>\r\n                            {\r\n                                element.name\r\n                            }\r\n                        </Tab>\r\n                    )\r\n                }\r\n            </nav>\r\n            <ul onScroll={scrollHandler} className={styles.ingredientsList + ' scrollbar'}>\r\n                { ingredientsList }\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default BurgerIngredients ;","export const INGREDIENTS_URL = 'https://norma.nomoreparties.space/api/ingredients';\r\nexport const CREATE_ORDER_URL = 'https://norma.nomoreparties.space/api/orders';\r\nexport const FORGOT_PASSWORD_URL = 'https://norma.nomoreparties.space/api/password-reset';\r\nexport const RESET_PASSWORD_URL = 'https://norma.nomoreparties.space/api/password-reset/reset';\r\nexport const REGISTER_URL = 'https://norma.nomoreparties.space/api/auth/register';\r\nexport const LOGIN_URL = 'https://norma.nomoreparties.space/api/auth/login';\r\nexport const LOGOUT_URL = 'https://norma.nomoreparties.space/api/auth/logout';\r\nexport const TOKEN_URL = 'https://norma.nomoreparties.space/api/auth/token';\r\nexport const GET_USER_URL = 'https://norma.nomoreparties.space/api/auth/user';\r\nexport const UPDATE_USER_URL = 'https://norma.nomoreparties.space/api/auth/user';\r\nexport const GET_ALL_ORDERS_URL = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const GET_USER_ORDERS_URL = 'wss://norma.nomoreparties.space/orders';","import {CREATE_ORDER_URL, INGREDIENTS_URL, TOKEN_URL} from '../api/urls';\r\nimport {getCookie, setCookie} from \"../../utils/cookies\";\r\nimport {AppDispatch, AppThunk, TIngredient, TApplicationActions, TConstructorIngredient} from \"../types/types\";\r\n\r\nexport const BURGER_INGREDIENTS = {\r\n    LOAD: 'BURGER_INGREDIENTS/LOAD' as 'BURGER_INGREDIENTS/LOAD',\r\n    LOAD_SUCCESS: 'BURGER_INGREDIENTS/LOAD_SUCCESS' as 'BURGER_INGREDIENTS/LOAD_SUCCESS',\r\n    LOAD_FAILED: 'BURGER_INGREDIENTS/LOAD_FAILED' as 'BURGER_INGREDIENTS/LOAD_FAILED'\r\n};\r\n\r\nexport interface IBurgerIngredientsLoadAction {\r\n    readonly type: typeof BURGER_INGREDIENTS.LOAD;\r\n}\r\n\r\nexport interface IBurgerIngredientsLoadSuccessAction {\r\n    readonly type: typeof BURGER_INGREDIENTS.LOAD_SUCCESS;\r\n    readonly data: ReadonlyArray<TIngredient>;\r\n}\r\n\r\nexport interface IBurgerIngredientsLoadFailedAction {\r\n    readonly type: typeof BURGER_INGREDIENTS.LOAD_FAILED;\r\n}\r\n\r\nexport type TBurgerIngredientsActions =\r\n    IBurgerIngredientsLoadAction\r\n    | IBurgerIngredientsLoadSuccessAction\r\n    | IBurgerIngredientsLoadFailedAction;\r\n\r\nexport const burgerIngredientsLoad: AppThunk = () => {\r\n    return function(dispatch: AppDispatch): void {\r\n        dispatch({\r\n            type: BURGER_INGREDIENTS.LOAD\r\n        });\r\n\r\n        fetch(INGREDIENTS_URL).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: BURGER_INGREDIENTS.LOAD_SUCCESS,\r\n                    data: response.data\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: BURGER_INGREDIENTS.LOAD_FAILED\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport const BURGER_CONSTRUCTOR = {\r\n    ADD: 'BURGER_CONSTRUCTOR/ADD' as 'BURGER_CONSTRUCTOR/ADD',\r\n    REMOVE: 'BURGER_CONSTRUCTOR/REMOVE' as 'BURGER_CONSTRUCTOR/REMOVE',\r\n    REMOVE_ALL: 'BURGER_CONSTRUCTOR/REMOVE_ALL' as 'BURGER_CONSTRUCTOR/REMOVE_ALL',\r\n    MOVE: 'BURGER_CONSTRUCTOR/MOVE' as 'BURGER_CONSTRUCTOR/MOVE'\r\n};\r\n\r\nexport interface IBurgerConstructorAddAction {\r\n    readonly type: typeof BURGER_CONSTRUCTOR.ADD;\r\n    readonly ingredient: TIngredient;\r\n    readonly localId: number;\r\n}\r\n\r\nexport interface IBurgerConstructorRemoveAction {\r\n    readonly type: typeof BURGER_CONSTRUCTOR.REMOVE;\r\n    readonly ingredient: TIngredient;\r\n    readonly index: number;\r\n}\r\n\r\nexport interface IBurgerConstructorRemoveAllAction {\r\n    readonly type: typeof BURGER_CONSTRUCTOR.REMOVE_ALL;\r\n}\r\n\r\nexport interface IBurgerConstructorMoveAction {\r\n    readonly type: typeof BURGER_CONSTRUCTOR.MOVE;\r\n    readonly indexTo: number;\r\n    readonly indexFrom: number;\r\n}\r\n\r\nexport type TBurgerConstructorActions =\r\n    IBurgerConstructorAddAction\r\n    | IBurgerConstructorRemoveAction\r\n    | IBurgerConstructorRemoveAllAction\r\n    | IBurgerConstructorMoveAction;\r\n\r\nexport const ORDER_NUMBER = {\r\n    LOAD: 'ORDER_NUMBER/LOAD' as 'ORDER_NUMBER/LOAD',\r\n    LOAD_SUCCESS: 'ORDER_NUMBER/LOAD_SUCCESS' as 'ORDER_NUMBER/LOAD_SUCCESS',\r\n    LOAD_FAILED: 'ORDER_NUMBER/LOAD_FAILED' as 'ORDER_NUMBER/LOAD_FAILED',\r\n    DELETE: 'ORDER_NUMBER/DELETE' as 'ORDER_NUMBER/DELETE'\r\n};\r\n\r\nexport interface IOrderNumberLoadAction {\r\n    readonly type: typeof ORDER_NUMBER.LOAD;\r\n}\r\n\r\nexport interface IOrderNumberLoadSuccessAction {\r\n    readonly type: typeof ORDER_NUMBER.LOAD_SUCCESS;\r\n    readonly number: string;\r\n}\r\n\r\nexport interface IOrderNumberLoadFailedAction {\r\n    readonly type: typeof ORDER_NUMBER.LOAD_FAILED;\r\n}\r\n\r\nexport interface IOrderNumberDeleteAction {\r\n    readonly type: typeof ORDER_NUMBER.DELETE;\r\n}\r\n\r\nexport type TOrderNumberActions =\r\n    IOrderNumberLoadAction\r\n    | IOrderNumberLoadSuccessAction\r\n    | IOrderNumberLoadFailedAction\r\n    | IOrderNumberDeleteAction;\r\n\r\nexport const refreshToken: AppThunk = (afterRefresh: TApplicationActions) => {\r\n    return function(dispatch: AppDispatch): void {\r\n        fetch(TOKEN_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({token: localStorage.getItem('refreshToken')})\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw new Error('Failed to login');\r\n                }\r\n                const { accessToken, refreshToken } = response;\r\n                setCookie('accessToken', accessToken.split('Bearer ')[1]);\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n\r\n                dispatch(afterRefresh);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const orderNumberLoad: AppThunk = (ingredients: ReadonlyArray<TConstructorIngredient>) => {\r\n    return function(dispatch: AppDispatch | AppThunk): void {\r\n        dispatch({\r\n            type: ORDER_NUMBER.LOAD\r\n        });\r\n        fetch(CREATE_ORDER_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: 'Bearer ' + getCookie('accessToken')\r\n            },\r\n            body: JSON.stringify({'ingredients': ingredients})\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw response;\r\n                }\r\n                dispatch({\r\n                    type: ORDER_NUMBER.LOAD_SUCCESS,\r\n                    number: response.order.number\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (error.message === 'jwt expired') {\r\n                    dispatch(refreshToken(orderNumberLoad(ingredients)));\r\n                }\r\n\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: ORDER_NUMBER.LOAD_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n","import React, {FC} from 'react';\r\nimport {TConstructorIngredient, useDispatch} from '../../services/types/types';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { BURGER_CONSTRUCTOR } from '../../services/actions/actions';\r\nimport styles from '../burger-constructor-element/burger-constructor-element.module.css';\r\nimport {ConstructorElement, DragIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ninterface IBurgerConstructorElementProps {\r\n    element: TConstructorIngredient;\r\n    type?: \"top\" | \"bottom\";\r\n    index?: number;\r\n}\r\n\r\nconst BurgerConstructorElement: FC<IBurgerConstructorElementProps> =\r\n    ({element, type, index}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const closeHandler = () => {\r\n        dispatch({\r\n            type: BURGER_CONSTRUCTOR.REMOVE,\r\n            ingredient: element,\r\n            index\r\n        })\r\n    };\r\n\r\n    const ref = React.useRef<HTMLDivElement>(null);\r\n\r\n    const [{isDrag}, dragRef] = useDrag({\r\n        type: 'sorting',\r\n        item: {index},\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    const [{isHover}, dropRef] = useDrop({\r\n        accept: 'sorting',\r\n        drop(data: { index: number }, monitor) {\r\n            const dragIndex = data.index;\r\n            const dropIndex = index;\r\n            if (dragIndex === dropIndex || (!dropIndex && dropIndex!== 0)) {\r\n                return;\r\n            }\r\n            const dropBoundingRect = ref.current?.getBoundingClientRect();\r\n            if (dropBoundingRect) {\r\n                const dropMiddleY = (dropBoundingRect.bottom - dropBoundingRect.top) / 2;\r\n                const clientOffset = monitor.getClientOffset();\r\n                if (clientOffset && dropBoundingRect.top + dropMiddleY > clientOffset.y) {\r\n                    dispatch({\r\n                        type: BURGER_CONSTRUCTOR.MOVE,\r\n                        indexFrom: dragIndex,\r\n                        indexTo: dropIndex\r\n                    });\r\n                } else {\r\n                    if (dragIndex !== dropIndex + 1) {\r\n                        dispatch({\r\n                            type: BURGER_CONSTRUCTOR.MOVE,\r\n                            indexFrom: dragIndex,\r\n                            indexTo: dropIndex + 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    });\r\n    dragRef(dropRef(ref));\r\n\r\n    const filter = isHover && !isDrag ? 'brightness(2)' : 'none';\r\n    const opacity = isDrag ? 0.1 : 1;\r\n\r\n    const isLocked = !!type;\r\n    let text = element.name;\r\n    if (!!type) {\r\n        text += (type === 'top') ? ' (верх)' : ' (низ)';\r\n    }\r\n\r\n    return (\r\n        <div { ... !!type ? '' : {ref} } className={styles.ingredient} style={{filter, opacity}} >\r\n            {!isLocked && <DragIcon type=\"primary\" />}\r\n            <ConstructorElement\r\n                type={type}\r\n                isLocked={isLocked}\r\n                text={text}\r\n                price={element.price}\r\n                thumbnail={element.image}\r\n                handleClose={closeHandler}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BurgerConstructorElement;","export default __webpack_public_path__ + \"static/media/checkMark.dc2f52b0.png\";","import React, {FC} from 'react';\r\nimport styles from './order-details.module.css';\r\nimport checkMark from '../../images/checkMark.png';\r\n\r\ninterface IOrderDetailsProps {\r\n    orderNumber: string;\r\n};\r\n\r\nconst OrderDetails: FC<IOrderDetailsProps> = ({orderNumber}) => {\r\n    return (\r\n        <section className={styles.order}>\r\n            <p className=\"text text_type_digits-large mt-8\">{orderNumber}</p>\r\n            <p className=\"text text_type_main-medium mt-8 mb-15\">\r\n                идентификатор заказа\r\n            </p>\r\n            <img src={checkMark} className={styles.checkMark} alt='Done'/>\r\n            <p className=\"text text_type_main-default mt-15 mb-2\">\r\n                Ваш заказ начали готовить\r\n            </p>\r\n            <p className=\"text text_type_main-default text_color_inactive mb-30\">\r\n                Дождитесь готовности на орбитальной станции\r\n            </p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default OrderDetails;\r\n","import React, {FC} from 'react';\r\nimport { useSelector, useDispatch } from '../../services/types/types';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useDrop } from 'react-dnd';\r\nimport {CurrencyIcon,Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { BURGER_CONSTRUCTOR, ORDER_NUMBER, orderNumberLoad } from '../../services/actions/actions';\r\nimport BurgerConstructorElement from '../burger-constructor-element/burger-constructor-element';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport Modal from '../modal/modal';\r\nimport styles from './burger-constructor.module.css';\r\n\r\nconst BurgerConstructor: FC = () => {\r\n    const history = useHistory();\r\n    const {data, order, user} = useSelector(store => ({\r\n        data: store.burgerConstructorReducer,\r\n        order: store.orderNumberReducer,\r\n        user: store.userReducer.user\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const closeModal = () => {\r\n        dispatch({\r\n            type: ORDER_NUMBER.DELETE\r\n        });\r\n        dispatch({\r\n            type: BURGER_CONSTRUCTOR.REMOVE_ALL\r\n        });\r\n    }\r\n\r\n    const createOrderHandler = () => {\r\n        if (!user || !user.name) {\r\n            history.push('/login');\r\n            return;\r\n        }\r\n\r\n        if (!data.bun) {\r\n            return;\r\n        }\r\n        \r\n        const ingredients = data.inners.map(element => element._id);\r\n        if (data.bun) {\r\n            ingredients.push(data.bun._id);\r\n            ingredients.push(data.bun._id);\r\n        }\r\n\r\n        dispatch(orderNumberLoad(ingredients));\r\n    }\r\n\r\n    const [{isHover}, dropRef] = useDrop({\r\n        accept: 'ingredient',\r\n        drop(data) {\r\n            dispatch({\r\n                type: BURGER_CONSTRUCTOR.ADD,\r\n                ingredient: data,\r\n                localId: Math.floor(Math.random() * 10000)\r\n            });\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    });\r\n\r\n    const filter = isHover ? 'brightness(1.5)' : 'none';\r\n\r\n    let topBun, bottomBun, orderValue = 0;\r\n    if (data.bun) {\r\n        topBun = <BurgerConstructorElement element={data.bun} type='top' />;\r\n        bottomBun = <BurgerConstructorElement element={data.bun} type='bottom' />;\r\n        orderValue = data.bun.price * 2;\r\n    }\r\n    const innerList = data.inners.map(\r\n        (element, index) => <BurgerConstructorElement key={element.key}  element={element} index={index}/>\r\n    );\r\n\r\n    orderValue += data.inners.reduce((acc, element) => acc + element.price, 0);\r\n\r\n    return (\r\n        <section className={styles.constructor + ' ml-10 pt-15 pl-4'}>\r\n            <section ref={dropRef} className={styles.list} style={{filter}} >\r\n                {\r\n                    !data.bun && !data.inners.length\r\n                    && <p className={styles.info}>Drag the ingredients to make your order</p>\r\n                }\r\n                {topBun}\r\n                <div className={styles.innerList + ' scrollbar'}>\r\n                    {innerList}\r\n                </div>\r\n                {bottomBun}\r\n            </section>\r\n            <div className={styles.order + ' mt-10'}>\r\n                <p className=\"text text_type_digits-medium mr-2\">{orderValue}</p>\r\n                <CurrencyIcon type=\"primary\" />\r\n                <div className=\"ml-10 mr-4\">\r\n                    {order.isLoading ? (\r\n                        <p className={styles.orderInfo}>Creating...</p>\r\n                    ) : (\r\n                        <Button onClick={createOrderHandler} type=\"primary\" size=\"large\">\r\n                            Оформить заказ\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {!!order.number && <Modal closeModal={closeModal}>\r\n                <OrderDetails orderNumber={order.number}/>\r\n            </Modal>}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default BurgerConstructor;","import React, {FC} from 'react';\r\nimport {DndProvider} from 'react-dnd';\r\nimport {HTML5Backend} from 'react-dnd-html5-backend';\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\nimport styles from './home.module.css';\r\n\r\nconst HomePage: FC = () => {\r\n    return (\r\n        <>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <main className={styles.main}>\r\n                    <BurgerIngredients/>\r\n                    <BurgerConstructor/>\r\n                </main>\r\n            </DndProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n","import {setCookie, getCookie, deleteCookie} from '../../utils/cookies';\r\nimport {refreshToken} from \"./actions\";\r\nimport {\r\n    REGISTER_URL,\r\n    LOGIN_URL,\r\n    LOGOUT_URL,\r\n    GET_USER_URL\r\n} from \"../api/urls\";\r\nimport {AppDispatch, AppThunk, TUserInfo} from \"../types/types\";\r\n\r\nexport const USER_ACTIONS = {\r\n    LOGIN: 'USER/LOGIN' as 'USER/LOGIN',\r\n    LOGIN_SUCCESS: 'USER/LOGIN_SUCCESS' as 'USER/LOGIN_SUCCESS',\r\n    LOGIN_FAILED: 'USER/LOGIN_FAILED' as 'USER/LOGIN_FAILED',\r\n    LOGOUT: 'USER/LOGOUT' as 'USER/LOGOUT',\r\n    LOGOUT_SUCCESS: 'USER/LOGOUT_SUCCESS' as 'USER/LOGOUT_SUCCESS',\r\n    LOGOUT_FAILED: 'USER/LOGOUT_FAILED' as 'USER/LOGOUT_FAILED',\r\n    REGISTER: 'USER/REGISTER' as 'USER/REGISTER',\r\n    REGISTER_SUCCESS: 'USER/REGISTER_SUCCESS' as 'USER/REGISTER_SUCCESS',\r\n    REGISTER_FAILED: 'USER/REGISTER_FAILED' as 'USER/REGISTER_FAILED',\r\n    GET_USER: 'USER/GET_USER' as 'USER/GET_USER',\r\n    GET_USER_SUCCESS: 'USER/GET_USER_SUCCESS' as 'USER/GET_USER_SUCCESS',\r\n    GET_USER_FAILED: 'USER/GET_USER_FAILED' as 'USER/GET_USER_FAILED',\r\n    UPDATE_USER: 'USER/UPDATE_USER' as 'USER/UPDATE_USER',\r\n    UPDATE_USER_SUCCESS: 'USER/UPDATE_USER_SUCCESS' as 'USER/UPDATE_USER_SUCCESS',\r\n    UPDATE_USER_FAILED: 'USER/UPDATE_USER_FAILED' as 'USER/UPDATE_USER_FAILED'\r\n};\r\n\r\nexport interface IUserLoginAction {\r\n    readonly type: typeof USER_ACTIONS.LOGIN;\r\n}\r\n\r\nexport interface IUserLoginSuccessAction {\r\n    readonly type: typeof USER_ACTIONS.LOGIN_SUCCESS;\r\n    readonly user: TUserInfo;\r\n}\r\n\r\nexport interface IUserLoginFailedAction {\r\n    readonly type: typeof USER_ACTIONS.LOGIN_FAILED;\r\n}\r\n\r\nexport interface IUserLogoutAction {\r\n    readonly type: typeof USER_ACTIONS.LOGOUT;\r\n}\r\n\r\nexport interface IUserLogoutSuccessAction {\r\n    readonly type: typeof USER_ACTIONS.LOGOUT_SUCCESS;\r\n}\r\n\r\nexport interface IUserLogoutFailedAction {\r\n    readonly type: typeof USER_ACTIONS.LOGOUT_FAILED;\r\n}\r\n\r\nexport interface IUserRegisterAction {\r\n    readonly type: typeof USER_ACTIONS.REGISTER;\r\n}\r\n\r\nexport interface IUserRegisterSuccessAction {\r\n    readonly type: typeof USER_ACTIONS.REGISTER_SUCCESS;\r\n    readonly user: TUserInfo;\r\n}\r\n\r\nexport interface IUserRegisterFailedAction {\r\n    readonly type: typeof USER_ACTIONS.REGISTER_FAILED;\r\n}\r\n\r\nexport interface IUserGetUserAction {\r\n    readonly type: typeof USER_ACTIONS.GET_USER;\r\n}\r\n\r\nexport interface IUserGetUserSuccessAction {\r\n    readonly type: typeof USER_ACTIONS.GET_USER_SUCCESS;\r\n    readonly user: TUserInfo;\r\n}\r\n\r\nexport interface IUserGetUserFailedAction {\r\n    readonly type: typeof USER_ACTIONS.GET_USER_FAILED;\r\n}\r\n\r\nexport interface IUserUpdateUserAction {\r\n    readonly type: typeof USER_ACTIONS.UPDATE_USER;\r\n}\r\n\r\nexport interface IUserUpdateUserSuccessAction {\r\n    readonly type: typeof USER_ACTIONS.UPDATE_USER_SUCCESS;\r\n    readonly user: TUserInfo;\r\n}\r\n\r\nexport interface IUserUpdateUserFailedAction {\r\n    readonly type: typeof USER_ACTIONS.UPDATE_USER_FAILED;\r\n}\r\n\r\nexport type TUserActions =\r\n    IUserLoginAction\r\n    | IUserLoginSuccessAction\r\n    | IUserLoginFailedAction\r\n    | IUserLogoutAction\r\n    | IUserLogoutSuccessAction\r\n    | IUserLogoutFailedAction\r\n    | IUserRegisterAction\r\n    | IUserRegisterSuccessAction\r\n    | IUserRegisterFailedAction\r\n    | IUserGetUserAction\r\n    | IUserGetUserSuccessAction\r\n    | IUserGetUserFailedAction\r\n    | IUserUpdateUserAction\r\n    | IUserUpdateUserSuccessAction\r\n    | IUserUpdateUserFailedAction;\r\n\r\nexport const register: AppThunk = (email: string, password: string, name: string) => {\r\n    return function(dispatch: AppDispatch): void {\r\n        dispatch({\r\n            type: USER_ACTIONS.REGISTER\r\n        });\r\n\r\n        fetch(REGISTER_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email, password, name})\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw new Error('Failed to register the user');\r\n                }\r\n                const { accessToken, refreshToken } = response;\r\n                setCookie('accessToken', accessToken.split('Bearer ')[1], {expires: 20 * 60});\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n\r\n                dispatch({\r\n                    type: USER_ACTIONS.REGISTER_SUCCESS,\r\n                    user: response.user\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: USER_ACTIONS.REGISTER_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const login: AppThunk = (email: string, password: string) => {\r\n    return function(dispatch: AppDispatch): void {\r\n        dispatch({\r\n            type: USER_ACTIONS.LOGIN\r\n        });\r\n\r\n        fetch(LOGIN_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email, password})\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw new Error('Failed to login');\r\n                }\r\n                const { accessToken, refreshToken } = response;\r\n                setCookie('accessToken', accessToken.split('Bearer ')[1], {expires: 20 * 60});\r\n                localStorage.setItem('refreshToken', refreshToken);\r\n\r\n                dispatch({\r\n                    type: USER_ACTIONS.LOGIN_SUCCESS,\r\n                    user: response.user\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: USER_ACTIONS.LOGIN_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const logout: AppThunk = () => {\r\n    return function(dispatch: AppDispatch): void {\r\n        dispatch({\r\n            type: USER_ACTIONS.LOGOUT\r\n        });\r\n\r\n        fetch(LOGOUT_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                token: localStorage.getItem('refreshToken')\r\n            })\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw new Error('Failed to logout');\r\n                }\r\n\r\n                deleteCookie('accessToken');\r\n                localStorage.removeItem('refreshToken');\r\n                dispatch({\r\n                    type: USER_ACTIONS.LOGOUT_SUCCESS\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: USER_ACTIONS.LOGOUT_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUser: AppThunk = () => {\r\n    return function(dispatch: AppDispatch | AppThunk): void {\r\n        dispatch({\r\n            type: USER_ACTIONS.GET_USER\r\n        });\r\n        fetch(GET_USER_URL, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: 'Bearer ' + getCookie('accessToken')\r\n            }\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw response;\r\n                }\r\n\r\n                dispatch({\r\n                    type: USER_ACTIONS.GET_USER_SUCCESS,\r\n                    user: response.user\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (error.message === 'jwt expired') {\r\n                    dispatch(refreshToken(getUser()));\r\n                }\r\n                dispatch({\r\n                    type: USER_ACTIONS.GET_USER_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateUser: AppThunk = (email, password, name) => {\r\n    return function(dispatch: AppDispatch | AppThunk): void {\r\n        dispatch({\r\n            type: USER_ACTIONS.UPDATE_USER\r\n        });\r\n        fetch(GET_USER_URL, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: 'Bearer ' + getCookie('accessToken')\r\n            },\r\n            body: JSON.stringify({email, password, name})\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw response;\r\n                }\r\n\r\n                dispatch({\r\n                    type: USER_ACTIONS.UPDATE_USER_SUCCESS,\r\n                    user: response.user\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (error.message === 'jwt expired') {\r\n                    dispatch(refreshToken(updateUser(email, password, name)));\r\n                }\r\n\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: USER_ACTIONS.UPDATE_USER_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n","import React, {FC} from 'react';\r\nimport { useDispatch } from '../services/types/types';\r\nimport { Link } from 'react-router-dom';\r\nimport { EmailInput, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {login} from \"../services/actions/user-actions\";\r\nimport styles from './login.module.css';\r\n\r\nconst LoginPage: FC = () => {\r\n\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loginHandler = React.useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            dispatch(login(email, password));\r\n        }, [dispatch, email, password]);\r\n\r\n    const changeEmailHandler = React.useCallback((e) => {\r\n        setEmail(e.target.value);\r\n    }, [setEmail]);\r\n\r\n    const changePasswordHandler = React.useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, [setPassword]);\r\n\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <form onSubmit={loginHandler} className={styles.form}>\r\n                <p className='text text_type_main-medium mb-6'>\r\n                    Вход\r\n                </p>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <EmailInput\r\n                        name={'email'}\r\n                        value={email}\r\n                        onChange={changeEmailHandler}/>\r\n                </div>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <PasswordInput\r\n                        name={'password'}\r\n                        value={password}\r\n                        onChange={changePasswordHandler}/>\r\n                </div>\r\n                <div className='mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Войти\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n            <section className={styles.textRow + ' mb-4'}>\r\n                <p className=\"text text_type_main-default text_color_inactive mr-2\">\r\n                    Вы - новый пользователь?\r\n                </p>\r\n                <Link to='/register' className={styles.link}>\r\n                    <p className='text text_type_main-default'>\r\n                        Зарегистрироваться\r\n                    </p>\r\n                </Link>\r\n            </section>\r\n            <section className={styles.textRow}>\r\n                <p className=\"text text_type_main-default text_color_inactive mr-2\">\r\n                    Забыли пароль?\r\n                </p>\r\n                <Link to='/forgot-password' className={styles.link}>\r\n                    <p className='text text_type_main-default'>\r\n                        Восстановить пароль\r\n                    </p>\r\n                </Link>\r\n            </section>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React, {FC} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./profile-menu.module.css\";\r\nimport {useDispatch} from '../../services/types/types';\r\nimport {logout} from \"../../services/actions/user-actions\";\r\n\r\nconst ProfileMenu: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <section className={styles.menu}>\r\n            <nav>\r\n                <ul className={styles.menuList}>\r\n                    <li>\r\n                        <NavLink to='/profile'\r\n                                 className={styles.menuItemLink}\r\n                                 activeClassName={styles.menuActiveItemLink}\r\n                                 exact\r\n                        >\r\n                            <p className={styles.menuItem + \" text text_type_main-medium\"}>\r\n                                Профиль\r\n                            </p>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/profile/orders'\r\n                                 className={styles.menuItemLink}\r\n                                 activeClassName={styles.menuActiveItemLink}\r\n                        >\r\n                            <p className={styles.menuItem + \" text text_type_main-medium\"}>\r\n                                История заказов\r\n                            </p>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <p onClick={logoutHandler}\r\n                           className={styles.menuItem\r\n                           + ' ' + styles.menuItemLink\r\n                           + \" text text_type_main-medium\"}>\r\n                            Выход\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <p className=\"text text_type_main-default text_color_inactive mt-20\">\r\n                В этом разделе вы можете<br/>изменить свои персональные данные\r\n            </p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ProfileMenu;","import React, {FC} from 'react';\r\nimport { useSelector, useDispatch } from '../services/types/types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Button, Input} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './profile.module.css';\r\nimport {updateUser} from \"../services/actions/user-actions\";\r\nimport ProfileMenu from \"../components/profile-menu/profile-menu\";\r\n\r\nconst ProfilePage: FC = () => {\r\n    const user = useSelector(store => store.userReducer.user);\r\n\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        if (user && user.name) {\r\n            setEmail(user?.email || '');\r\n            setName(user.name);\r\n        }\r\n    }, [user]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updateHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser(email, password, name));\r\n    };\r\n\r\n    const clearHandler = () => {\r\n        setEmail(user?.email || '');\r\n        setName(user?.name || '');\r\n    };\r\n\r\n    const changeEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const changePasswordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const changeNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    if (!user || !user.name) {\r\n        return (\r\n            <Redirect\r\n                to={{ pathname: '/login' }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        (user && user.name) ? (\r\n            <div className={styles.positioning}>\r\n                <form onSubmit={updateHandler} className={styles.wrapper}>\r\n                    <div className={styles.inputWrapper + ' mb-6'}>\r\n                        <Input\r\n                            name={'name'}\r\n                            type='text'\r\n                            value={name}\r\n                            onChange={changeNameHandler}\r\n                            placeholder='Имя'\r\n                            icon='EditIcon'\r\n                        />\r\n                    </div>\r\n                    <div className={styles.inputWrapper + ' mb-6'}>\r\n                        <Input\r\n                            name={'email'}\r\n                            type='email'\r\n                            value={email}\r\n                            onChange={changeEmailHandler}\r\n                            placeholder='E-mail'\r\n                            icon='EditIcon'\r\n                        />\r\n                    </div>\r\n                    <div className={styles.inputWrapper + ' mb-6'}>\r\n                        <Input\r\n                            name={'password'}\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={changePasswordHandler}\r\n                            placeholder='Пароль'\r\n                            icon='EditIcon'\r\n                        />\r\n                    </div>\r\n                    <div className={styles.buttonsRow}>\r\n                        <Button type=\"primary\" size=\"medium\">\r\n                            Сохранить\r\n                        </Button>\r\n                        <Button onClick={clearHandler} type=\"primary\" size=\"medium\">\r\n                            Отменить\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <ProfileMenu/>\r\n            </div>\r\n        ) : (\r\n            <p>Loading...</p>\r\n        )\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React, {FC} from 'react';\r\nimport { useDispatch } from '../services/types/types';\r\nimport {Link} from \"react-router-dom\";\r\nimport { EmailInput, PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { register } from '../services/actions/user-actions';\r\nimport styles from './register.module.css';\r\n\r\nconst RegisterPage: FC = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const registerHandler = React.useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            dispatch(register(email, password, name));\r\n        }, [dispatch, email, password, name]);\r\n\r\n    const changeEmailHandler = React.useCallback((e) => {\r\n        setEmail(e.target.value);\r\n    }, [setEmail]);\r\n\r\n    const changePasswordHandler = React.useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, [setPassword]);\r\n\r\n    const changeNameHandler = React.useCallback((e) => {\r\n        setName(e.target.value);\r\n    }, [setName]);\r\n\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <form onSubmit={registerHandler} className={styles.form}>\r\n                <p className='text text_type_main-medium mb-6'>\r\n                    Регистрация\r\n                </p>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <Input\r\n                        name={'name'}\r\n                        type='text'\r\n                        value={name}\r\n                        onChange={changeNameHandler}\r\n                        placeholder='Имя'/>\r\n                </div>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <EmailInput\r\n                        name={'email'}\r\n                        value={email}\r\n                        onChange={changeEmailHandler}/>\r\n                </div>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <PasswordInput\r\n                        name={'password'}\r\n                        value={password}\r\n                        onChange={changePasswordHandler}/>\r\n                </div>\r\n                <div className='mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n            <section className={styles.textRow + ' mb-4'}>\r\n                <p className=\"text text_type_main-default text_color_inactive mr-2\">\r\n                    Уже зарегистрированы?\r\n                </p>\r\n                <Link to='/login' className={styles.link}>\r\n                    <p className='text text_type_main-default'>\r\n                        Войти\r\n                    </p>\r\n                </Link>\r\n            </section>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","import {FORGOT_PASSWORD_URL, RESET_PASSWORD_URL} from \"../api/urls\";\r\nimport {AppDispatch, AppThunk} from \"../types/types\";\r\n\r\nexport const PASSWORD_ACTIONS = {\r\n    FORGOT_PASSWORD: 'PASSWORD/FORGOT_PASSWORD' as 'PASSWORD/FORGOT_PASSWORD',\r\n    FORGOT_PASSWORD_SUCCESS: 'PASSWORD/FORGOT_PASSWORD_SUCCESS' as 'PASSWORD/FORGOT_PASSWORD_SUCCESS',\r\n    FORGOT_PASSWORD_FAILED: 'PASSWORD/FORGOT_PASSWORD_FAILED' as 'PASSWORD/FORGOT_PASSWORD_FAILED',\r\n    RESET_PASSWORD: 'PASSWORD/RESET_PASSWORD' as 'PASSWORD/RESET_PASSWORD',\r\n    RESET_PASSWORD_SUCCESS: 'PASSWORD/RESET_PASSWORD_SUCCESS' as 'PASSWORD/RESET_PASSWORD_SUCCESS',\r\n    RESET_PASSWORD_FAILED: 'PASSWORD/RESET_PASSWORD_FAILED' as 'PASSWORD/RESET_PASSWORD_FAILED'\r\n};\r\n\r\nexport interface IPasswordForgotAction {\r\n    readonly type: typeof PASSWORD_ACTIONS.FORGOT_PASSWORD;\r\n}\r\n\r\nexport interface IPasswordForgotSuccessAction {\r\n    readonly type: typeof PASSWORD_ACTIONS.FORGOT_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface IPasswordForgotFailedAction {\r\n    readonly type: typeof PASSWORD_ACTIONS.FORGOT_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface IPasswordResetAction {\r\n    readonly type: typeof PASSWORD_ACTIONS.RESET_PASSWORD;\r\n}\r\n\r\nexport interface IPasswordResetSuccessAction {\r\n    readonly type: typeof PASSWORD_ACTIONS.RESET_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface IPasswordResetFailedAction {\r\n    readonly type: typeof PASSWORD_ACTIONS.RESET_PASSWORD_FAILED;\r\n}\r\n\r\nexport type TPasswordActions =\r\n    IPasswordForgotAction\r\n    | IPasswordForgotSuccessAction\r\n    | IPasswordForgotFailedAction\r\n    | IPasswordResetAction\r\n    | IPasswordResetSuccessAction\r\n    | IPasswordResetFailedAction;\r\n\r\nexport const forgotPassword: AppThunk = (email: string) => {\r\n    return function(dispatch: AppDispatch): void {\r\n        dispatch({\r\n            type: PASSWORD_ACTIONS.FORGOT_PASSWORD\r\n        });\r\n        fetch(FORGOT_PASSWORD_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email})\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw new Error('Failed creating order');\r\n                }\r\n                dispatch({\r\n                    type: PASSWORD_ACTIONS.FORGOT_PASSWORD_SUCCESS\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: PASSWORD_ACTIONS.FORGOT_PASSWORD_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const resetPassword: AppThunk = (password: string, token: string) => {\r\n    return function(dispatch: AppDispatch): void {\r\n        dispatch({\r\n            type: PASSWORD_ACTIONS.RESET_PASSWORD\r\n        });\r\n        fetch(RESET_PASSWORD_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({password, token})\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Failed getting data from server');\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!response.success) {\r\n                    throw new Error('Failed creating order');\r\n                }\r\n                dispatch({\r\n                    type: PASSWORD_ACTIONS.RESET_PASSWORD_SUCCESS\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                dispatch({\r\n                    type: PASSWORD_ACTIONS.RESET_PASSWORD_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n","import React, {FC} from 'react';\r\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\r\nimport { EmailInput, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { forgotPassword } from '../services/actions/password-actions';\r\nimport styles from './forgot-password.module.css';\r\nimport {useDispatch, useSelector} from '../services/types/types';\r\n\r\nconst ForgotPasswordPage: FC = () => {\r\n    const isForgotPassword = useSelector(store => store.passwordReducer.isForgot);\r\n    const location = useLocation();\r\n    const [email, setEmail] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const restoreHandler = React.useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            if (!email) {\r\n                return;\r\n            }\r\n\r\n            dispatch(forgotPassword(email));\r\n        }, [email, dispatch]);\r\n\r\n    const changeEmailHandler = React.useCallback((e) => {\r\n        setEmail(e.target.value);\r\n    }, [setEmail]);\r\n\r\n    if (isForgotPassword) {\r\n        return (\r\n            <Redirect\r\n                to={{\r\n                    pathname: '/reset-password',\r\n                    state: {from: location}\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <form onSubmit={restoreHandler} className={styles.form}>\r\n                <p className='text text_type_main-medium mb-6'>\r\n                    Восстановление пароля\r\n                </p>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <EmailInput name={'email'} value={email} onChange={changeEmailHandler}/>\r\n                </div>\r\n                <div className='mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Восстановить\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n            <section className={styles.textRow + ' mb-4'}>\r\n                <p className=\"text text_type_main-default text_color_inactive mr-2\">\r\n                    Вспомнили пароль?\r\n                </p>\r\n                <Link to='/login' className={styles.link}>\r\n                    <p className='text text_type_main-default'>\r\n                        Войти\r\n                    </p>\r\n                </Link>\r\n            </section>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordPage;","import React, {FC} from 'react';\r\nimport { PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport styles from './reset-password.module.css';\r\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\r\nimport {resetPassword} from '../services/actions/password-actions';\r\nimport {useDispatch, useSelector} from \"../services/types/types\";\r\n\r\nconst ResetPasswordPage: FC = () => {\r\n    const {isForgot, isReset} = useSelector(store => store.passwordReducer);\r\n    const location = useLocation();\r\n\r\n    const [password, setPassword] = React.useState('');\r\n    const [token, setToken] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const restoreHandler = React.useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            dispatch(resetPassword(password, token));\r\n        }, [password, token, dispatch]);\r\n\r\n    const changePasswordHandler = React.useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    }, [setPassword]);\r\n\r\n    const changeTokenHandler = React.useCallback((e) => {\r\n        setToken(e.target.value);\r\n    }, [setToken]);\r\n\r\n    if (isReset || !isForgot) {\r\n        return (\r\n            <Redirect\r\n                to={{\r\n                    pathname: isReset ? '/login' : '/forgot-password',\r\n                    state: {from: location}\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <form onSubmit={restoreHandler} className={styles.form}>\r\n                <p className='text text_type_main-medium mb-6'>\r\n                    Восстановление пароля\r\n                </p>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <PasswordInput\r\n                        name={'password'}\r\n                        value={password}\r\n                        onChange={changePasswordHandler}/>\r\n                </div>\r\n                <div className={styles.inputWrapper + ' mb-6'}>\r\n                    <Input\r\n                        name={'name'}\r\n                        type='text'\r\n                        value={token}\r\n                        onChange={changeTokenHandler}\r\n                        placeholder='Введите код из письма'/>\r\n                </div>\r\n                <div className='mb-20'>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n            <section className={styles.textRow + ' mb-4'}>\r\n                <p className=\"text text_type_main-default text_color_inactive mr-2\">\r\n                    Вспомнили пароль?\r\n                </p>\r\n                <Link to='/login' className={styles.link}>\r\n                    <p className='text text_type_main-default'>\r\n                        Войти\r\n                    </p>\r\n                </Link>\r\n            </section>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ResetPasswordPage;","import React, {FC} from 'react';\r\n\r\nconst Page404: FC = () => {\r\n    return (\r\n        <p>Page not found!</p>\r\n    );\r\n}\r\n\r\nexport default Page404;","import React, {FC} from 'react';\r\nimport styles from './orders-overview.module.css';\r\nimport {TOrders} from \"../../services/types/types\";\r\n\r\ninterface IOrdersOverviewProps {\r\n    data: null | TOrders;\r\n}\r\n\r\nconst OrdersOverview: FC<IOrdersOverviewProps> = ({data}) => {\r\n        const ordersDone = data && data.orders.filter(order => order.status === 'done')\r\n            .filter((_,index) => index < 10);\r\n        const ordersPending = data && data.orders.filter(order => order.status === 'pending')\r\n            .filter((_,index) => index < 10);\r\n\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <table className={styles.table}>\r\n                <tbody>\r\n                <tr className={styles.tableHeader}>\r\n                    <th className={styles.firstColumn}>\r\n                        <p className=\"text text_type_main-medium\">\r\n                            Готовы:\r\n                        </p>\r\n                    </th>\r\n                    <th>\r\n                        <p className=\"text text_type_main-medium\">\r\n                            В работе:\r\n                        </p>\r\n                    </th>\r\n                </tr>\r\n                <tr className={styles.tableRow}>\r\n                    <td className={styles.firstColumn}>\r\n                        <ul className={styles.list}>\r\n                            {ordersDone && ordersDone.map(order => (\r\n                                <li key={order._id} className={styles.readyOrder}>\r\n                                    <p className=\"text text_type_digits-default\">{order.number}</p>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </td>\r\n                    <td>\r\n                        <ul className={styles.list}>\r\n                            {ordersPending && ordersPending.map(order => (\r\n                                <li key={order._id} className={styles.readyOrder}>\r\n                                    <p className=\"text text_type_digits-default\">{order.number}</p>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <p className=\"text text_type_main-medium mt-15\">\r\n                Выполнено за все время:\r\n            </p>\r\n            <p className=\"text text_type_digits-large\">{data ? data.total : '-'}</p>\r\n            <p className=\"text text_type_main-medium mt-15\">\r\n                Выполнено за сегодня:\r\n            </p>\r\n            <p className=\"text text_type_digits-large\">{data ? data.totalToday : '-'}</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default OrdersOverview;","export function formatOrderDate(orderDatePresentation: string): string {\r\n    const orderDate: Date = new Date(orderDatePresentation);\r\n    const dateFormatted: string = new Intl.DateTimeFormat('ru-ru',{\r\n        timeZoneName: 'short',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n    }).format(orderDate);\r\n\r\n    const orderDateMs: number = orderDate.setHours(0,0,0,0);\r\n    const currentDateMs: number = new Date().setHours(0,0,0,0);\r\n    const difference: number = Math.floor(Math.abs(orderDateMs - currentDateMs) / (24 * 60 * 60 * 1000));\r\n\r\n    let description: string;\r\n    if (difference === 0) {\r\n        description = 'Сегодня';\r\n    } else if (difference === 1) {\r\n        description = 'Вчера';\r\n    } else {\r\n        description = `${difference} дней назад`;\r\n    }\r\n\r\n    return description + ', ' + dateFormatted;\r\n}","import React, {FC} from 'react';\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {getStatusDescription} from \"../../utils/data\";\r\nimport {TOrder} from \"../../services/types/types\";\r\nimport {useSelector} from \"../../services/types/types\";\r\nimport styles from './order-element.module.css';\r\nimport {formatOrderDate} from \"../../utils/formatDate\";\r\n\r\ninterface IOrderElementProps {\r\n    data: TOrder;\r\n    isHistory?: boolean;\r\n}\r\n\r\nconst OrderElement: FC<IOrderElementProps> = ({data, isHistory = false}) => {\r\n    const allIngredients = useSelector(store => store.burgerIngredientsReducer.data);\r\n\r\n    const ingredients = React.useMemo(()=>{\r\n        return data.ingredients\r\n            .map(ingredient_id => allIngredients\r\n                .find(ingredient => ingredient._id === ingredient_id))\r\n            .filter(ingredient => ingredient);\r\n    }, [data.ingredients, allIngredients]);\r\n\r\n    const sum = React.useMemo(()=>{\r\n        return ingredients.reduce((accum, ingredient) =>\r\n            accum + (ingredient?.price || 0), 0);\r\n    }, [ingredients]);\r\n\r\n    const showIngredients = ingredients.filter((_,index) => index <= 5);\r\n    const hiddenIngredients = (ingredients.length !== showIngredients.length)\r\n        ? ingredients.length - showIngredients.length + 1 : 0;\r\n\r\n    return (\r\n        <section className={styles.wrapper + ' ' + (isHistory ? styles.history : styles.feed) + ' p-6'}>\r\n            <div className={styles.row + ' ' + styles.rowFar}>\r\n                <p className=\"text text_type_digits-default\">\r\n                    #{data.number}\r\n                </p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                    {formatOrderDate(data.createdAt)}\r\n                </p>\r\n            </div>\r\n            <p className=\"text text_type_main-medium mt-6 mb-2\">\r\n                {data.name}\r\n            </p>\r\n            <p className={\"text text_type_main-default mb-6 \" + styles.readyOrder}>\r\n                { getStatusDescription(data.status) }\r\n            </p>\r\n            <div className={styles.row + ' ' + styles.rowFar}>\r\n                <ul className={styles.picturesList + ' ' + styles.row}>\r\n                    {showIngredients && showIngredients.map((ingredient, index) => {\r\n                        const isShowHidden = !!hiddenIngredients && index === 0;\r\n                        return ingredient &&\r\n                            (\r\n                                <li key={ingredient._id + index} className={styles.pictureContainer}>\r\n                                    <img src={ingredient.image} alt={ingredient.name} className={styles.picture}/>\r\n                                    {isShowHidden && (\r\n                                        <p className={\"text text_type_main-default \" + styles.hiddenIngredients}>\r\n                                            {`+${hiddenIngredients}`}\r\n                                        </p>\r\n                                    )}\r\n                                </li>\r\n                            )\r\n                        }\r\n                    )}\r\n                </ul>\r\n                <div className={styles.row}>\r\n                    <p className=\"text text_type_digits-default mr-2\">\r\n                        {sum}\r\n                    </p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default OrderElement;","import {TOrders} from \"../types/types\";\r\n\r\nexport const WS_ALL_ORDERS_ACTION = {\r\n    CONNECTION_START: 'WS_ALL_ORDERS_ACTION/CONNECTION_START' as 'WS_ALL_ORDERS_ACTION/CONNECTION_START',\r\n    CONNECTION_SUCCESS: 'WS_ALL_ORDERS_ACTION/CONNECTION_SUCCESS' as 'WS_ALL_ORDERS_ACTION/CONNECTION_SUCCESS',\r\n    CONNECTION_ERROR: 'WS_ALL_ORDERS_ACTION/CONNECTION_ERROR' as 'WS_ALL_ORDERS_ACTION/CONNECTION_ERROR',\r\n    CONNECTION_CLOSED: 'WS_ALL_ORDERS_ACTION/CONNECTION_CLOSED' as 'WS_ALL_ORDERS_ACTION/CONNECTION_CLOSED',\r\n    GET_MESSAGE: 'WS_ALL_ORDERS_ACTION/GET_MESSAGE' as 'WS_ALL_ORDERS_ACTION/GET_MESSAGE'\r\n};\r\n\r\nexport interface I_WS_AllOrdersConnectionStartAction {\r\n    readonly type: typeof WS_ALL_ORDERS_ACTION.CONNECTION_START;\r\n}\r\n\r\nexport interface I_WS_AllOrdersConnectionSuccessAction {\r\n    readonly type: typeof WS_ALL_ORDERS_ACTION.CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface I_WS_AllOrdersConnectionErrorAction {\r\n    readonly type: typeof WS_ALL_ORDERS_ACTION.CONNECTION_ERROR;\r\n    readonly payload: string;\r\n}\r\n\r\nexport interface I_WS_AllOrdersConnectionClosedAction {\r\n    readonly type: typeof WS_ALL_ORDERS_ACTION.CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface I_WS_AllOrdersGetMessageAction {\r\n    readonly type: typeof WS_ALL_ORDERS_ACTION.GET_MESSAGE;\r\n    readonly payload: TOrders;\r\n}\r\n\r\nexport type T_WS_AllOrdersActions =\r\n    I_WS_AllOrdersConnectionStartAction\r\n    | I_WS_AllOrdersConnectionSuccessAction\r\n    | I_WS_AllOrdersConnectionErrorAction\r\n    | I_WS_AllOrdersConnectionClosedAction\r\n    | I_WS_AllOrdersGetMessageAction;\r\n\r\nexport const WS_USER_ORDERS_ACTION = {\r\n    CONNECTION_START: 'WS_USER_ORDERS_ACTION/CONNECTION_START' as 'WS_USER_ORDERS_ACTION/CONNECTION_START',\r\n    CONNECTION_SUCCESS: 'WS_USER_ORDERS_ACTION/CONNECTION_SUCCESS' as 'WS_USER_ORDERS_ACTION/CONNECTION_SUCCESS',\r\n    CONNECTION_ERROR: 'WS_USER_ORDERS_ACTION/CONNECTION_ERROR' as 'WS_USER_ORDERS_ACTION/CONNECTION_ERROR',\r\n    CONNECTION_CLOSED: 'WS_USER_ORDERS_ACTION/CONNECTION_CLOSED' as 'WS_USER_ORDERS_ACTION/CONNECTION_CLOSED',\r\n    GET_MESSAGE: 'WS_USER_ORDERS_ACTION/GET_MESSAGE' as 'WS_USER_ORDERS_ACTION/GET_MESSAGE'\r\n};\r\n\r\nexport interface I_WS_UserOrdersConnectionStartAction {\r\n    readonly type: typeof WS_USER_ORDERS_ACTION.CONNECTION_START;\r\n}\r\n\r\nexport interface I_WS_UserOrdersConnectionSuccessAction {\r\n    readonly type: typeof WS_USER_ORDERS_ACTION.CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface I_WS_UserOrdersConnectionErrorAction {\r\n    readonly type: typeof WS_USER_ORDERS_ACTION.CONNECTION_ERROR;\r\n    readonly payload: string;\r\n}\r\n\r\nexport interface I_WS_UserOrdersConnectionClosedAction {\r\n    readonly type: typeof WS_USER_ORDERS_ACTION.CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface I_WS_UserOrdersGetMessageAction {\r\n    readonly type: typeof WS_USER_ORDERS_ACTION.GET_MESSAGE;\r\n    readonly payload: TOrders;\r\n}\r\n\r\nexport type T_WS_UserOrdersActions =\r\n    | I_WS_UserOrdersConnectionStartAction\r\n    | I_WS_UserOrdersConnectionSuccessAction\r\n    | I_WS_UserOrdersConnectionErrorAction\r\n    | I_WS_UserOrdersConnectionClosedAction\r\n    | I_WS_UserOrdersGetMessageAction;\r\n","import React, {FC} from 'react';\r\nimport {useDispatch, useSelector} from \"../services/types/types\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport OrdersOverview from \"../components/orders-overview/orders-overview\";\r\nimport OrderElement from \"../components/order-element/order-element\";\r\nimport styles from './feed.module.css';\r\nimport {WS_ALL_ORDERS_ACTION} from \"../services/actions/orders-actions\";\r\n\r\nconst FeedPage: FC = () => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const { wsConnected, data } = useSelector(store => store.allOrdersReducer);\r\n    if (!wsConnected) {\r\n        dispatch({\r\n            type: WS_ALL_ORDERS_ACTION.CONNECTION_START\r\n        });\r\n    }\r\n\r\n    const orders = data && data.orders;\r\n\r\n    return (\r\n        <div className={styles.allWrapper}>\r\n            <p className=\"text text_type_main-large mt-10 mb-5\">\r\n                Лента заказов\r\n            </p>\r\n            <div className={styles.wrapper}>\r\n                <ul className={styles.list + ' scrollbar'}>\r\n                    {orders && orders.map(order => (\r\n                        <li key={order._id}>\r\n                            <Link className={styles.link}\r\n                                  to={{\r\n                                      pathname: `/feed/${order._id}`,\r\n                                      state: {background: location}\r\n                                  }}>\r\n                                <OrderElement data={order}/>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <OrdersOverview data={data} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedPage;","import React, {FC} from 'react';\r\nimport OrderElement from \"../components/order-element/order-element\";\r\nimport ProfileMenu from \"../components/profile-menu/profile-menu\";\r\nimport styles from './history.module.css';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"../services/types/types\";\r\nimport {WS_USER_ORDERS_ACTION} from \"../services/actions/orders-actions\";\r\nimport {getCookie} from \"../utils/cookies\";\r\n\r\nconst HistoryPage: FC = () => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const { wsConnected, data } = useSelector(store => store.userOrdersReducer);\r\n    if (!wsConnected) {\r\n        dispatch({\r\n            type: WS_USER_ORDERS_ACTION.CONNECTION_START,\r\n            token: getCookie('accessToken')\r\n        });\r\n    }\r\n\r\n    const orders = data && data.orders;\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <ProfileMenu/>\r\n            <ul className={styles.list + ' scrollbar'}>\r\n                {orders && orders.map(order => (\r\n                    <li key={order._id}>\r\n                        <Link className={styles.link}\r\n                              to={{\r\n                                  pathname: `/profile/orders/${order._id}`,\r\n                                  state: {background: location}\r\n                              }}>\r\n                            <OrderElement data={order} isHistory />\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default HistoryPage;","import React, {FC} from 'react';\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {TOrder, useDispatch, useSelector} from \"../../services/types/types\";\r\nimport { useParams,useLocation } from 'react-router-dom';\r\nimport styles from './order-info.module.css';\r\nimport {WS_ALL_ORDERS_ACTION, WS_USER_ORDERS_ACTION} from \"../../services/actions/orders-actions\";\r\nimport {getStatusDescription} from \"../../utils/data\";\r\nimport {formatOrderDate} from \"../../utils/formatDate\";\r\nimport {getCookie} from \"../../utils/cookies\";\r\n\r\nconst OrderInfo: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const { id } = useParams<{id: string}>();\r\n    const allIngredients = useSelector(store => store.burgerIngredientsReducer.data);\r\n\r\n    const isFeed = location.pathname.includes('/feed');\r\n\r\n    const allOrdersReducer = useSelector(store => store.allOrdersReducer);\r\n    if (isFeed && allOrdersReducer && !allOrdersReducer.wsConnected) {\r\n        dispatch({\r\n            type: WS_ALL_ORDERS_ACTION.CONNECTION_START\r\n        });\r\n    }\r\n\r\n    const userOrdersReducer = useSelector(store => store.userOrdersReducer);\r\n    if (!isFeed && userOrdersReducer && !userOrdersReducer.wsConnected ) {\r\n        dispatch({\r\n            type: WS_USER_ORDERS_ACTION.CONNECTION_START,\r\n            token: getCookie('accessToken')\r\n        });\r\n    }\r\n\r\n    const data = isFeed ? allOrdersReducer.data : userOrdersReducer.data;\r\n\r\n    let order: TOrder | undefined;\r\n    if (id && data && data.orders) {\r\n        order = data.orders.find(order => order._id === id);\r\n    }\r\n\r\n    const ingredients = React.useMemo(()=>{\r\n        if (!order) return null;\r\n        return order.ingredients\r\n            .map(ingredient_id => allIngredients\r\n                .find(ingredient => ingredient._id === ingredient_id))\r\n            .filter(ingredient => ingredient);\r\n    }, [order, allIngredients]);\r\n\r\n    const sum = React.useMemo(()=>{\r\n        if (!ingredients) return 0;\r\n        return ingredients.reduce((accum, ingredient) =>\r\n            accum + (ingredient?.price || 0), 0);\r\n    }, [ingredients]);\r\n\r\n    return (\r\n        order ? (\r\n            <section className={styles.wrapper}>\r\n                <p className={\"text text_type_digits-default mb-10 \" + styles.number}>#{order.number}</p>\r\n                <p className=\"text text_type_main-medium mb-3\">\r\n                    {order.name}\r\n                </p>\r\n                <p className={\"text text_type_main-default mb-15 \" + styles.status}>\r\n                    { getStatusDescription(order.status) }\r\n                </p>\r\n                <p className=\"text text_type_main-medium mb-6\">\r\n                    Состав:\r\n                </p>\r\n                <ul className={styles.list + ' scrollbar'}>\r\n                    {ingredients && ingredients.map((ingredient, index) => (\r\n                        ingredient && (\r\n                            <li className={styles.row} key={ingredient._id + index}>\r\n                                <div className={styles.pictureContainer}>\r\n                                    <img className={styles.picture} src={ingredient.image} alt={ingredient.name}/>\r\n                                </div>\r\n                                <p className={\"text text_type_main-default ml-4 mr-4 \" + styles.ingredient}>\r\n                                    {ingredient.name}\r\n                                </p>\r\n                                <p className={\"text text_type_digits-default mr-2 \" + styles.toTheRight}>\r\n                                    {ingredient.price}\r\n                                </p>\r\n                                <div className='mr-2'>\r\n                                    <CurrencyIcon type=\"primary\"/>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    ))}\r\n                </ul>\r\n                <div className={styles.row + ' mt-10 mb-10'}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        {formatOrderDate(order.createdAt)}\r\n                    </p>\r\n                    <p className={\"text text_type_digits-default mr-2 \" + styles.toTheRight}>{sum}</p>\r\n                    <CurrencyIcon type=\"primary\"/>\r\n                </div>\r\n            </section>\r\n        ) : (<p>Loading...</p>)\r\n    );\r\n};\r\n\r\nexport default OrderInfo;","import React, {FC} from 'react';\r\nimport {useDispatch, useSelector, ICustomLocation} from '../../services/types/types';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport AppHeader from '../app-header/app-header';\r\nimport Modal from '../modal/modal';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport {ProtectedRoute} from '../protected-route/protected-route';\r\nimport {ProtectedRouteAuthorized} from '../protected-route-authorized/protected-route-authorized';\r\nimport { HomePage, RegisterPage, LoginPage, ForgotPasswordPage, ResetPasswordPage, ProfilePage,\r\n    HistoryPage, FeedPage, Page404 } from '../../pages';\r\nimport { getUser } from '../../services/actions/user-actions';\r\nimport { burgerIngredientsLoad } from '../../services/actions/actions';\r\nimport styles from './app.module.css';\r\nimport OrderInfo from \"../order-info/order-info\";\r\n\r\nconst App: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const {isLoading, isError, data} = useSelector(store => store.burgerIngredientsReducer);\r\n    React.useEffect(() => {\r\n        dispatch(getUser());\r\n        dispatch(burgerIngredientsLoad());\r\n    }, [dispatch]);\r\n\r\n    const history = useHistory();\r\n    const location = useLocation<ICustomLocation>();\r\n    const background = history.action === 'PUSH' && location.state && location.state.background;\r\n    const closeModal = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppHeader/>\r\n            {isLoading && <p className={styles.info}>Loading...</p>}\r\n            {isError && <p className={styles.error}>Failed getting data from server</p>}\r\n            {!isLoading && !isError && !!data.length && (\r\n                <>\r\n                    <Switch location={background || location}>\r\n                        <Route path='/' exact>\r\n                            <HomePage/>\r\n                        </Route>\r\n                        <ProtectedRouteAuthorized path='/login' exact isLogin>\r\n                            <LoginPage/>\r\n                        </ProtectedRouteAuthorized>\r\n                        <ProtectedRouteAuthorized path='/register' exact>\r\n                            <RegisterPage/>\r\n                        </ProtectedRouteAuthorized>\r\n                        <ProtectedRouteAuthorized path='/forgot-password' exact>\r\n                            <ForgotPasswordPage/>\r\n                        </ProtectedRouteAuthorized>\r\n                        <ProtectedRouteAuthorized path='/reset-password' exact>\r\n                            <ResetPasswordPage/>\r\n                        </ProtectedRouteAuthorized>\r\n                        <ProtectedRoute path='/profile' exact>\r\n                            <ProfilePage/>\r\n                        </ProtectedRoute>\r\n                        <ProtectedRoute path='/profile/orders' exact>\r\n                            <HistoryPage/>\r\n                        </ProtectedRoute>\r\n                        <ProtectedRoute path='/profile/orders/:id' exact>\r\n                            <OrderInfo />\r\n                        </ProtectedRoute>\r\n                        <Route path='/feed' exact>\r\n                            <FeedPage/>\r\n                        </Route>\r\n                        <Route path='/feed/:id' exact>\r\n                            <OrderInfo />\r\n                        </Route>\r\n                        <Route path='/ingredients/:id' exact>\r\n                            <IngredientDetails addTitle/>\r\n                        </Route>\r\n                        <Route>\r\n                            <Page404/>\r\n                        </Route>\r\n                    </Switch>\r\n                    {\r\n                        background && (\r\n                            <>\r\n                                <Route path='/ingredients/:id' exact>\r\n                                    <Modal title='Детали ингредиента' closeModal={closeModal}>\r\n                                        <IngredientDetails/>\r\n                                    </Modal>\r\n                                </Route>\r\n                                <Route path='/feed/:id' exact>\r\n                                    <Modal closeModal={closeModal}>\r\n                                        <OrderInfo/>\r\n                                    </Modal>\r\n                                </Route>\r\n                                <ProtectedRoute path='/profile/orders/:id' exact>\r\n                                    <Modal closeModal={closeModal}>\r\n                                        <OrderInfo/>\r\n                                    </Modal>\r\n                                </ProtectedRoute>\r\n                            </>\r\n                        )\r\n                    }\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    IUserGetUserSuccessAction,\r\n    IUserLoginSuccessAction,\r\n    IUserRegisterSuccessAction, IUserUpdateUserSuccessAction,\r\n    TUserActions,\r\n    USER_ACTIONS\r\n} from '../actions/user-actions'\r\nimport {TUserInfo} from \"../types/types\";\r\n\r\ntype TUserState = {\r\n    readonly user: TUserInfo;\r\n    readonly isLoading: boolean;\r\n    readonly isError: boolean;\r\n};\r\n\r\nconst userInitialState: TUserState = {\r\n    user: {\r\n        name: null,\r\n        email: null\r\n    },\r\n    isLoading: false,\r\n    isError: false\r\n};\r\n\r\nexport const userReducer = (state = userInitialState, action: TUserActions): TUserState => {\r\n    switch(action.type) {\r\n        case USER_ACTIONS.LOGIN:\r\n            return {...state, user: userInitialState.user, isLoading: true, isError: false}\r\n        case USER_ACTIONS.LOGIN_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case USER_ACTIONS.LOGIN_SUCCESS:\r\n            return {...state, user: (action as IUserLoginSuccessAction).user, isLoading: false, isError: false}\r\n        case USER_ACTIONS.LOGOUT:\r\n            return {...state, isLoading: true, isError: false}\r\n        case USER_ACTIONS.LOGOUT_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case USER_ACTIONS.LOGOUT_SUCCESS:\r\n            return {...state, user: userInitialState.user, isLoading: false, isError: false}\r\n        case USER_ACTIONS.REGISTER:\r\n            return {...state, isLoading: true, isError: false}\r\n        case USER_ACTIONS.REGISTER_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case USER_ACTIONS.REGISTER_SUCCESS:\r\n            return {...state, user: (action as IUserRegisterSuccessAction).user, isLoading: false, isError: false}\r\n        case USER_ACTIONS.GET_USER:\r\n            return {...state, user: userInitialState.user, isLoading: true, isError: false}\r\n        case USER_ACTIONS.GET_USER_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case USER_ACTIONS.GET_USER_SUCCESS:\r\n            return {...state, user: (action as IUserGetUserSuccessAction).user, isLoading: false, isError: false}\r\n        case USER_ACTIONS.UPDATE_USER:\r\n            return {...state, isLoading: true, isError: false}\r\n        case USER_ACTIONS.UPDATE_USER_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case USER_ACTIONS.UPDATE_USER_SUCCESS:\r\n            return {...state, user: (action as IUserUpdateUserSuccessAction).user, isLoading: false, isError: false}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {PASSWORD_ACTIONS, TPasswordActions} from '../actions/password-actions';\r\n\r\ntype TPasswordState = {\r\n    readonly isForgot: boolean;\r\n    readonly isForgotLoading: boolean;\r\n    readonly isForgotError: boolean;\r\n    readonly isReset: boolean;\r\n    readonly isResetLoading: boolean;\r\n    readonly isResetError: boolean;\r\n};\r\n\r\nconst passwordInitialState: TPasswordState = {\r\n    isForgot: false,\r\n    isForgotLoading: false,\r\n    isForgotError: false,\r\n    isReset: false,\r\n    isResetLoading: false,\r\n    isResetError: false\r\n};\r\n\r\nexport const passwordReducer = (state = passwordInitialState, action: TPasswordActions): TPasswordState => {\r\n    switch(action.type) {\r\n        case PASSWORD_ACTIONS.FORGOT_PASSWORD:\r\n            return {...state, isReset: false, isForgot: false, isForgotLoading: true, isForgotError: false}\r\n        case PASSWORD_ACTIONS.FORGOT_PASSWORD_FAILED:\r\n            return {...state, isForgotLoading: false, isForgotError: true}\r\n        case PASSWORD_ACTIONS.FORGOT_PASSWORD_SUCCESS:\r\n            return {...state, isForgot: true, isForgotLoading: false, isForgotError: false}\r\n        case PASSWORD_ACTIONS.RESET_PASSWORD:\r\n            return {...state, isReset: false, isResetLoading: true, isResetError: false}\r\n        case PASSWORD_ACTIONS.RESET_PASSWORD_FAILED:\r\n            return {...state, isResetLoading: false, isResetError: true}\r\n        case PASSWORD_ACTIONS.RESET_PASSWORD_SUCCESS:\r\n            return {...state, isReset: true, isResetLoading: false, isResetError: false}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    I_WS_AllOrdersConnectionErrorAction, I_WS_AllOrdersGetMessageAction,\r\n    I_WS_UserOrdersConnectionErrorAction, I_WS_UserOrdersGetMessageAction,\r\n    T_WS_AllOrdersActions,\r\n    T_WS_UserOrdersActions,\r\n    WS_ALL_ORDERS_ACTION,\r\n    WS_USER_ORDERS_ACTION\r\n} from '../actions/orders-actions';\r\nimport {TOrders} from \"../types/types\";\r\n\r\nexport type TOrdersState = {\r\n    readonly wsConnected: boolean;\r\n    readonly error: null | string,\r\n    readonly data: null | TOrders;\r\n};\r\n\r\nconst initialState: TOrdersState = {\r\n    wsConnected: false,\r\n    error: null,\r\n    data: null\r\n};\r\n\r\nexport const allOrdersReducer = (state = initialState, action: T_WS_AllOrdersActions): TOrdersState => {\r\n    switch (action.type) {\r\n        case WS_ALL_ORDERS_ACTION.CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: true\r\n            };\r\n        case WS_ALL_ORDERS_ACTION.CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: (action as I_WS_AllOrdersConnectionErrorAction).payload,\r\n                wsConnected: false\r\n            };\r\n        case WS_ALL_ORDERS_ACTION.CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: false\r\n            };\r\n        case WS_ALL_ORDERS_ACTION.GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                data: (action as I_WS_AllOrdersGetMessageAction).payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userOrdersReducer = (state = initialState, action: T_WS_UserOrdersActions): TOrdersState => {\r\n    switch (action.type) {\r\n        case WS_USER_ORDERS_ACTION.CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: true\r\n            };\r\n        case WS_USER_ORDERS_ACTION.CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: (action as I_WS_UserOrdersConnectionErrorAction).payload,\r\n                wsConnected: false\r\n            };\r\n        case WS_USER_ORDERS_ACTION.CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: false\r\n            };\r\n        case WS_USER_ORDERS_ACTION.GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                data: (action as I_WS_UserOrdersGetMessageAction).payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport {\r\n    BURGER_CONSTRUCTOR,\r\n    BURGER_INGREDIENTS, IBurgerConstructorAddAction, IBurgerConstructorMoveAction, IBurgerConstructorRemoveAction,\r\n    IBurgerIngredientsLoadSuccessAction, IOrderNumberLoadSuccessAction,\r\n    ORDER_NUMBER, TBurgerConstructorActions,\r\n    TBurgerIngredientsActions, TOrderNumberActions\r\n} from '../actions/actions';\r\nimport { userReducer } from './user-reducer';\r\nimport { passwordReducer } from './password-reducer';\r\nimport { allOrdersReducer, userOrdersReducer } from './orders-reducer';\r\nimport {TConstructorIngredient, TIngredient} from \"../types/types\";\r\n\r\ntype TIngredientTypesState = ReadonlyArray<{\r\n    readonly type: string,\r\n    readonly name: string\r\n}>;\r\n\r\nconst ingredientTypesInitialState: TIngredientTypesState = [\r\n    {\r\n        type: 'bun',\r\n        name: 'Булки'\r\n    },\r\n    {\r\n        type: 'sauce',\r\n        name: 'Соусы'\r\n    },\r\n    {\r\n        type: 'main',\r\n        name: 'Начинки'\r\n    }\r\n];\r\n\r\nexport const ingredientTypesReducer =\r\n    (state = ingredientTypesInitialState): TIngredientTypesState=> {\r\n\r\n    return state;\r\n};\r\n\r\ntype TBurgerIngredientsState = {\r\n    readonly data: ReadonlyArray<TIngredient>;\r\n    readonly isLoading: boolean;\r\n    readonly isError: boolean;\r\n};\r\n\r\nconst burgerIngredientsInitialState: TBurgerIngredientsState = {\r\n    data: [],\r\n    isLoading: false,\r\n    isError: false\r\n};\r\n\r\nexport const burgerIngredientsReducer = (state = burgerIngredientsInitialState,\r\n                                         action: TBurgerIngredientsActions):TBurgerIngredientsState => {\r\n    switch(action.type) {\r\n        case BURGER_INGREDIENTS.LOAD:\r\n            return {...state, data: [], isLoading: true, isError: false}\r\n        case BURGER_INGREDIENTS.LOAD_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case BURGER_INGREDIENTS.LOAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: (action as IBurgerIngredientsLoadSuccessAction).data,\r\n                isLoading: false,\r\n                isError: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype TBurgerConstructorState = {\r\n    readonly bun: null | TConstructorIngredient;\r\n    readonly inners: ReadonlyArray<TConstructorIngredient>;\r\n};\r\n\r\nconst burgerConstructorInitialState: TBurgerConstructorState = {\r\n    bun: null,\r\n    inners: []\r\n};\r\n\r\nexport const burgerConstructorReducer = (state = burgerConstructorInitialState,\r\n                                         action: TBurgerConstructorActions): TBurgerConstructorState => {\r\n    switch(action.type) {\r\n        case BURGER_CONSTRUCTOR.ADD: {\r\n            const key = (action as IBurgerConstructorAddAction).ingredient._id\r\n                + (action as IBurgerConstructorAddAction).localId;\r\n            const newIngredient = { ...(action as IBurgerConstructorAddAction).ingredient, key }\r\n            if ((action as IBurgerConstructorAddAction).ingredient.type === 'bun') {\r\n                return { ...state, bun: newIngredient }\r\n            } else {\r\n                return { ...state, inners: [...state.inners, newIngredient]}\r\n            }\r\n        }\r\n        case BURGER_CONSTRUCTOR.REMOVE:\r\n            if ((action as IBurgerConstructorRemoveAction).ingredient.type === 'bun') {\r\n                    return state;\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    inners: [\r\n                        ...state.inners.slice(0, (action as IBurgerConstructorRemoveAction).index),\r\n                        ...state.inners.slice((action as IBurgerConstructorRemoveAction).index + 1)\r\n                    ]\r\n                };\r\n            }\r\n        case BURGER_CONSTRUCTOR.REMOVE_ALL:\r\n            return burgerConstructorInitialState;\r\n        case BURGER_CONSTRUCTOR.MOVE: {\r\n            const indexTo =\r\n                (action as IBurgerConstructorMoveAction).indexTo > (action as IBurgerConstructorMoveAction).indexFrom\r\n                    ? (action as IBurgerConstructorMoveAction).indexTo - 1\r\n                    : (action as IBurgerConstructorMoveAction).indexTo;\r\n            const newInners = state.inners.filter(\r\n                (_,index) =>\r\n                    index !== (action as IBurgerConstructorMoveAction).indexFrom);\r\n            return {\r\n                ...state,\r\n                inners: [...newInners.slice(0, indexTo),\r\n                    state.inners[(action as IBurgerConstructorMoveAction).indexFrom],\r\n                    ...newInners.slice(indexTo)]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype TOrderNumberState = {\r\n    readonly number: null | string;\r\n    readonly isLoading: boolean;\r\n    readonly isError: boolean;\r\n};\r\n\r\nconst orderNumberInitialState: TOrderNumberState = {\r\n    number: null,\r\n    isLoading: false,\r\n    isError: false\r\n};\r\n\r\nexport const orderNumberReducer = (state = orderNumberInitialState,\r\n                                   action: TOrderNumberActions): TOrderNumberState => {\r\n    switch(action.type) {\r\n        case ORDER_NUMBER.LOAD:\r\n            return {...state, number: null, isLoading: true, isError: false}\r\n        case ORDER_NUMBER.LOAD_FAILED:\r\n            return {...state, isLoading: false, isError: true}\r\n        case ORDER_NUMBER.LOAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                number: (action as IOrderNumberLoadSuccessAction).number,\r\n                isLoading: false,\r\n                isError: false\r\n            }\r\n        case ORDER_NUMBER.DELETE:\r\n            return orderNumberInitialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredientTypesReducer,\r\n    burgerIngredientsReducer,\r\n    burgerConstructorReducer,\r\n    orderNumberReducer,\r\n    userReducer,\r\n    passwordReducer,\r\n    allOrdersReducer,\r\n    userOrdersReducer\r\n});\r\n","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {rootReducer} from \"../reducers/reducers\";\r\nimport {socketMiddlewareAllOrders,socketMiddlewareUserOrders} from \"../middleware/socket-middleware\";\r\nimport {GET_ALL_ORDERS_URL, GET_USER_ORDERS_URL} from \"../api/urls\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst initStore = () => {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const enhancer = composeEnhancers(applyMiddleware(thunk,\r\n        socketMiddlewareAllOrders(GET_ALL_ORDERS_URL),\r\n        socketMiddlewareUserOrders(GET_USER_ORDERS_URL)));\r\n\r\n    return createStore(rootReducer, enhancer);\r\n};\r\n\r\nexport const store = initStore();\r\n","import {MiddlewareAPI, AnyAction} from 'redux';\r\nimport {WS_ALL_ORDERS_ACTION, WS_USER_ORDERS_ACTION} from '../actions/orders-actions';\r\n\r\nexport const socketMiddlewareAllOrders = (wsUrl: string) => {\r\n    return (store: MiddlewareAPI) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return (next: (arg: AnyAction) => void) => (action: AnyAction) => {\r\n            const { dispatch } = store;\r\n            const { type } = action;\r\n\r\n            if (type === WS_ALL_ORDERS_ACTION.CONNECTION_START) {\r\n                socket = new WebSocket(wsUrl);\r\n            }\r\n\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({\r\n                        type: WS_ALL_ORDERS_ACTION.CONNECTION_SUCCESS,\r\n                        payload: event\r\n                    });\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({\r\n                        type: WS_ALL_ORDERS_ACTION.CONNECTION_ERROR,\r\n                        payload: event\r\n                    });\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    dispatch({\r\n                        type: WS_ALL_ORDERS_ACTION.GET_MESSAGE,\r\n                        payload: JSON.parse(event.data),\r\n                    });\r\n                };\r\n\r\n                socket.onclose = event => {\r\n                    dispatch({\r\n                        type: WS_ALL_ORDERS_ACTION.CONNECTION_CLOSED,\r\n                        payload: event\r\n                    });\r\n                };\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};\r\n\r\nexport const socketMiddlewareUserOrders = (wsUrl: string) => {\r\n    return (store: MiddlewareAPI) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return (next: (arg: AnyAction) => void) => (action: AnyAction) => {\r\n            const { dispatch } = store;\r\n            const { type, token } = action;\r\n\r\n            if (type === WS_USER_ORDERS_ACTION.CONNECTION_START) {\r\n                socket = new WebSocket(`${wsUrl}?token=${token}`);\r\n            }\r\n\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({\r\n                        type: WS_USER_ORDERS_ACTION.CONNECTION_SUCCESS,\r\n                        payload: event\r\n                    });\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({\r\n                        type: WS_USER_ORDERS_ACTION.CONNECTION_ERROR,\r\n                        payload: event\r\n                    });\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    const parsedData = JSON.parse(event.data);\r\n                    dispatch({\r\n                        type: WS_USER_ORDERS_ACTION.GET_MESSAGE,\r\n                        payload: parsedData\r\n                    });\r\n                };\r\n\r\n                socket.onclose = event => {\r\n                    dispatch({\r\n                        type: WS_USER_ORDERS_ACTION.CONNECTION_CLOSED,\r\n                        payload: event\r\n                    });\r\n                };\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './services/store/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router basename='/react-burger'>\r\n                <App/>\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-info_wrapper__3P8ij\",\"number\":\"order-info_number__2F_pW\",\"status\":\"order-info_status__zuh3J\",\"list\":\"order-info_list__2cOHn\",\"row\":\"order-info_row__3jAHc\",\"pictureContainer\":\"order-info_pictureContainer__3FuZE\",\"picture\":\"order-info_picture__Tgkp8\",\"ingredient\":\"order-info_ingredient__22BEG\",\"toTheRight\":\"order-info_toTheRight__10wPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"profile-menu_menu__1MaHm\",\"menuList\":\"profile-menu_menuList__3JfUQ\",\"menuItem\":\"profile-menu_menuItem__AarR8\",\"menuItemLink\":\"profile-menu_menuItemLink__1Jw1R\",\"menuActiveItemLink\":\"profile-menu_menuActiveItemLink__20Jut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"orders-overview_wrapper__3oakR\",\"table\":\"orders-overview_table__13dkx\",\"tableHeader\":\"orders-overview_tableHeader__4LZuk\",\"tableRow\":\"orders-overview_tableRow__2XQYo\",\"firstColumn\":\"orders-overview_firstColumn__Mq0Vc\",\"list\":\"orders-overview_list__Hc7w6\",\"readyOrder\":\"orders-overview_readyOrder__1dRPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__3pIKJ\",\"header\":\"ingredient-details_header__3jvOG\",\"image\":\"ingredient-details_image__z6wBE\",\"row\":\"ingredient-details_row__sTpTL\",\"column\":\"ingredient-details_column__1tCDR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__2yNW5\",\"form\":\"login_form__3K8Di\",\"textRow\":\"login_textRow__m_9Ty\",\"inputWrapper\":\"login_inputWrapper__q2xjk\",\"link\":\"login_link__eSs3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"register_wrapper__2mn0B\",\"form\":\"register_form__1ZdWI\",\"textRow\":\"register_textRow__2B3kY\",\"inputWrapper\":\"register_inputWrapper__2wTwP\",\"link\":\"register_link__1fSnn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__1V75P\",\"info\":\"burger-constructor_info__O_b_R\",\"orderInfo\":\"burger-constructor_orderInfo__myJSl\",\"list\":\"burger-constructor_list__3lSj3\",\"innerList\":\"burger-constructor_innerList__12nE-\",\"dropHovering\":\"burger-constructor_dropHovering__M38G-\",\"order\":\"burger-constructor_order__2L6bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"positioning\":\"profile_positioning__3qaHa\",\"wrapper\":\"profile_wrapper__1l-mW\",\"inputWrapper\":\"profile_inputWrapper__2zCz0\",\"buttonsRow\":\"profile_buttonsRow__YSbu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reset-password_wrapper__Him1Z\",\"form\":\"reset-password_form__1XXyP\",\"textRow\":\"reset-password_textRow__MPpxo\",\"inputWrapper\":\"reset-password_inputWrapper__34B0s\",\"link\":\"reset-password_link__S2D1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password_wrapper__3fY7x\",\"form\":\"forgot-password_form__2jDx2\",\"textRow\":\"forgot-password_textRow__1fE9B\",\"inputWrapper\":\"forgot-password_inputWrapper__3XOg8\",\"link\":\"forgot-password_link__18sV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"burger-list-ingredient_ingredient__3CePY\",\"image\":\"burger-list-ingredient_image__1bwha\",\"price\":\"burger-list-ingredient_price__4qXCw\",\"name\":\"burger-list-ingredient_name__35dIJ\",\"counter\":\"burger-list-ingredient_counter__bsAfp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"burger-ingredients_menu__3YlfP\",\"list\":\"burger-ingredients_list__bFVrQ\",\"ingredientsOfType\":\"burger-ingredients_ingredientsOfType__p4ydM burger-ingredients_list__bFVrQ\",\"ingredientsList\":\"burger-ingredients_ingredientsList__2Si3Q burger-ingredients_list__bFVrQ\",\"link\":\"burger-ingredients_link__1yd8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allWrapper\":\"feed_allWrapper__1FXUg\",\"wrapper\":\"feed_wrapper__3Jq-Q\",\"list\":\"feed_list__2MTef\",\"link\":\"feed_link__3iCZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__s09PW\",\"header\":\"modal_header__2ELyG\",\"closeButton\":\"modal_closeButton__3IdWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"history_wrapper__3ZgNH\",\"list\":\"history_list__t8no9\",\"link\":\"history_link__3Itla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-details_order__13glx\",\"checkMark\":\"order-details_checkMark__1uXxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"app_info__3neIR\",\"error\":\"app_error__1WYOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__19FPt\"};"],"sourceRoot":""}